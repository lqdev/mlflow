// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: databricks.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mlflow {

  /// <summary>Holder for reflection information generated from databricks.proto</summary>
  public static partial class DatabricksReflection {

    #region Descriptor
    /// <summary>File descriptor for databricks.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DatabricksReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBkYXRhYnJpY2tzLnByb3RvEgZtbGZsb3caIGdvb2dsZS9wcm90b2J1Zi9k",
            "ZXNjcmlwdG9yLnByb3RvGhVzY2FsYXBiL3NjYWxhcGIucHJvdG8izQEKFERh",
            "dGFicmlja3NScGNPcHRpb25zEicKCWVuZHBvaW50cxgBIAMoCzIULm1sZmxv",
            "dy5IdHRwRW5kcG9pbnQSJgoKdmlzaWJpbGl0eRgCIAEoDjISLm1sZmxvdy5W",
            "aXNpYmlsaXR5EiYKC2Vycm9yX2NvZGVzGAMgAygOMhEubWxmbG93LkVycm9y",
            "Q29kZRIlCgpyYXRlX2xpbWl0GAQgASgLMhEubWxmbG93LlJhdGVMaW1pdBIV",
            "Cg1ycGNfZG9jX3RpdGxlGAUgASgJIk8KDEh0dHBFbmRwb2ludBIOCgZtZXRo",
            "b2QYASABKAkSDAoEcGF0aBgCIAEoCRIhCgVzaW5jZRgDIAEoCzISLm1sZmxv",
            "dy5BcGlWZXJzaW9uIioKCkFwaVZlcnNpb24SDQoFbWFqb3IYASABKAUSDQoF",
            "bWlub3IYAiABKAUiQAoJUmF0ZUxpbWl0EhEKCW1heF9idXJzdBgBIAEoAxIg",
            "ChhtYXhfc3VzdGFpbmVkX3Blcl9zZWNvbmQYAiABKAMikwEKFURvY3VtZW50",
            "YXRpb25NZXRhZGF0YRIRCglkb2NzdHJpbmcYASABKAkSEAoIbGVhZF9kb2MY",
            "AiABKAkSJgoKdmlzaWJpbGl0eRgDIAEoDjISLm1sZmxvdy5WaXNpYmlsaXR5",
            "EhsKE29yaWdpbmFsX3Byb3RvX3BhdGgYBCADKAkSEAoIcG9zaXRpb24YBSAB",
            "KAUibgofRGF0YWJyaWNrc1NlcnZpY2VFeGNlcHRpb25Qcm90bxIlCgplcnJv",
            "cl9jb2RlGAEgASgOMhEubWxmbG93LkVycm9yQ29kZRIPCgdtZXNzYWdlGAIg",
            "ASgJEhMKC3N0YWNrX3RyYWNlGAMgASgJKj8KClZpc2liaWxpdHkSCgoGUFVC",
            "TElDEAASDAoISU5URVJOQUwQARIXChNQVUJMSUNfVU5ET0NVTUVOVEVEEAIq",
            "9gQKCUVycm9yQ29kZRISCg5JTlRFUk5BTF9FUlJPUhAAEhsKF1RFTVBPUkFS",
            "SUxZX1VOQVZBSUxBQkxFEAESDAoISU9fRVJST1IQAhIPCgtCQURfUkVRVUVT",
            "VBADEhwKF0lOVkFMSURfUEFSQU1FVEVSX1ZBTFVFEOgHEhcKEkVORFBPSU5U",
            "X05PVF9GT1VORBDpBxIWChFNQUxGT1JNRURfUkVRVUVTVBDqBxISCg1JTlZB",
            "TElEX1NUQVRFEOsHEhYKEVBFUk1JU1NJT05fREVOSUVEEOwHEhUKEEZFQVRV",
            "UkVfRElTQUJMRUQQ7QcSGgoVQ1VTVE9NRVJfVU5BVVRIT1JJWkVEEO4HEhsK",
            "FlJFUVVFU1RfTElNSVRfRVhDRUVERUQQ7wcSHQoYSU5WQUxJRF9TVEFURV9U",
            "UkFOU0lUSU9OENEPEhsKFkNPVUxEX05PVF9BQ1FVSVJFX0xPQ0sQ0g8SHAoX",
            "UkVTT1VSQ0VfQUxSRUFEWV9FWElTVFMQuRcSHAoXUkVTT1VSQ0VfRE9FU19O",
            "T1RfRVhJU1QQuhcSEwoOUVVPVEFfRVhDRUVERUQQoR8SHAoXTUFYX0JMT0NL",
            "X1NJWkVfRVhDRUVERUQQoh8SGwoWTUFYX1JFQURfU0laRV9FWENFRURFRBCj",
            "HxITCg5EUllfUlVOX0ZBSUxFRBCJJxIcChdSRVNPVVJDRV9MSU1JVF9FWENF",
            "RURFRBCKJxIYChNESVJFQ1RPUllfTk9UX0VNUFRZEPEuEhgKE0RJUkVDVE9S",
            "WV9QUk9URUNURUQQ8i4SHwoaTUFYX05PVEVCT09LX1NJWkVfRVhDRUVERUQQ",
            "8y46RwoKdmlzaWJpbGl0eRIdLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE9wdGlv",
            "bnMY7pADIAEoDjISLm1sZmxvdy5WaXNpYmlsaXR5OjoKEXZhbGlkYXRlX3Jl",
            "cXVpcmVkEh0uZ29vZ2xlLnByb3RvYnVmLkZpZWxkT3B0aW9ucxjvkAMgASgI",
            "OjQKC2pzb25faW5saW5lEh0uZ29vZ2xlLnByb3RvYnVmLkZpZWxkT3B0aW9u",
            "cxjwkAMgASgIOjEKCGpzb25fbWFwEh0uZ29vZ2xlLnByb3RvYnVmLkZpZWxk",
            "T3B0aW9ucxjxkAMgASgIOlEKCWZpZWxkX2RvYxIdLmdvb2dsZS5wcm90b2J1",
            "Zi5GaWVsZE9wdGlvbnMY8pADIAMoCzIdLm1sZmxvdy5Eb2N1bWVudGF0aW9u",
            "TWV0YWRhdGE6SwoDcnBjEh4uZ29vZ2xlLnByb3RvYnVmLk1ldGhvZE9wdGlv",
            "bnMY7pADIAEoCzIcLm1sZmxvdy5EYXRhYnJpY2tzUnBjT3B0aW9uczpTCgpt",
            "ZXRob2RfZG9jEh4uZ29vZ2xlLnByb3RvYnVmLk1ldGhvZE9wdGlvbnMY8pAD",
            "IAMoCzIdLm1sZmxvdy5Eb2N1bWVudGF0aW9uTWV0YWRhdGE6VQoLbWVzc2Fn",
            "ZV9kb2MSHy5nb29nbGUucHJvdG9idWYuTWVzc2FnZU9wdGlvbnMY8pADIAMo",
            "CzIdLm1sZmxvdy5Eb2N1bWVudGF0aW9uTWV0YWRhdGE6VQoLc2VydmljZV9k",
            "b2MSHy5nb29nbGUucHJvdG9idWYuU2VydmljZU9wdGlvbnMY8pADIAMoCzId",
            "Lm1sZmxvdy5Eb2N1bWVudGF0aW9uTWV0YWRhdGE6TwoIZW51bV9kb2MSHC5n",
            "b29nbGUucHJvdG9idWYuRW51bU9wdGlvbnMY8pADIAMoCzIdLm1sZmxvdy5E",
            "b2N1bWVudGF0aW9uTWV0YWRhdGE6VgoVZW51bV92YWx1ZV92aXNpYmlsaXR5",
            "EiEuZ29vZ2xlLnByb3RvYnVmLkVudW1WYWx1ZU9wdGlvbnMY7pADIAEoDjIS",
            "Lm1sZmxvdy5WaXNpYmlsaXR5OloKDmVudW1fdmFsdWVfZG9jEiEuZ29vZ2xl",
            "LnByb3RvYnVmLkVudW1WYWx1ZU9wdGlvbnMY8pADIAMoCzIdLm1sZmxvdy5E",
            "b2N1bWVudGF0aW9uTWV0YWRhdGFCKgojY29tLmRhdGFicmlja3MuYXBpLnBy",
            "b3RvLmRhdGFicmlja3PiPwIQAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { pbr::FileDescriptor.DescriptorProtoFileDescriptor, global::Scalapb.ScalapbReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Mlflow.Visibility), typeof(global::Mlflow.ErrorCode), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.DatabricksRpcOptions), global::Mlflow.DatabricksRpcOptions.Parser, new[]{ "Endpoints", "Visibility", "ErrorCodes", "RateLimit", "RpcDocTitle" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.HttpEndpoint), global::Mlflow.HttpEndpoint.Parser, new[]{ "Method", "Path", "Since" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.ApiVersion), global::Mlflow.ApiVersion.Parser, new[]{ "Major", "Minor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.RateLimit), global::Mlflow.RateLimit.Parser, new[]{ "MaxBurst", "MaxSustainedPerSecond" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.DocumentationMetadata), global::Mlflow.DocumentationMetadata.Parser, new[]{ "Docstring", "LeadDoc", "Visibility", "OriginalProtoPath", "Position" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.DatabricksServiceExceptionProto), global::Mlflow.DatabricksServiceExceptionProto.Parser, new[]{ "ErrorCode", "Message", "StackTrace" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Visibility defines who is allowed to use the RPC.
  /// </summary>
  public enum Visibility {
    /// <summary>
    /// Public indicates visible to both external and internal customers.
    /// </summary>
    [pbr::OriginalName("PUBLIC")] Public = 0,
    /// <summary>
    /// Internal is only available to Databricks-internal clients.
    /// </summary>
    [pbr::OriginalName("INTERNAL")] Internal = 1,
    /// <summary>
    /// Public-undocumented are accessible via public endpoints, but not documented. This is useful
    /// for internal clients that depend on public endpoints (e.g. workflows running in the driver).
    /// </summary>
    [pbr::OriginalName("PUBLIC_UNDOCUMENTED")] PublicUndocumented = 2,
  }

  public enum ErrorCode {
    /// <summary>
    ///
    /// Internal, system-level error codes, which generally cannot be resolved by the user, but
    /// instead are due to service issues.
    ///
    /// Generic internal error occurred.
    /// </summary>
    [pbr::OriginalName("INTERNAL_ERROR")] InternalError = 0,
    /// <summary>
    /// An internal system could not be contacted due to a period of unavailability.
    /// </summary>
    [pbr::OriginalName("TEMPORARILY_UNAVAILABLE")] TemporarilyUnavailable = 1,
    /// <summary>
    /// Indicates that an IOException has been internally thrown.
    /// </summary>
    [pbr::OriginalName("IO_ERROR")] IoError = 2,
    /// <summary>
    /// The request is invalid.
    /// </summary>
    [pbr::OriginalName("BAD_REQUEST")] BadRequest = 3,
    /// <summary>
    ///
    /// Common application-level error codes, which were caused by the user input but may be returned
    /// by multiple services.
    ///
    /// Supplied value for a parameter was invalid (e.g., giving a number for a string parameter).
    /// </summary>
    [pbr::OriginalName("INVALID_PARAMETER_VALUE")] InvalidParameterValue = 1000,
    /// <summary>
    /// Indicates that the given API endpoint does not exist.
    /// </summary>
    [pbr::OriginalName("ENDPOINT_NOT_FOUND")] EndpointNotFound = 1001,
    /// <summary>
    /// Indicates that the given API request was malformed.
    /// </summary>
    [pbr::OriginalName("MALFORMED_REQUEST")] MalformedRequest = 1002,
    /// <summary>
    /// If one or more of the inputs to a given RPC are not in a valid state for the action.
    /// </summary>
    [pbr::OriginalName("INVALID_STATE")] InvalidState = 1003,
    /// <summary>
    /// If a given user/entity doesn't have the required permission(s) to perform an action
    /// </summary>
    [pbr::OriginalName("PERMISSION_DENIED")] PermissionDenied = 1004,
    /// <summary>
    /// If a given user/entity is trying to use a feature which has been disabled
    /// </summary>
    [pbr::OriginalName("FEATURE_DISABLED")] FeatureDisabled = 1005,
    /// <summary>
    /// If customer-provided credentials are not authorized to perform an operation
    /// </summary>
    [pbr::OriginalName("CUSTOMER_UNAUTHORIZED")] CustomerUnauthorized = 1006,
    /// <summary>
    /// If the API request is rejected due to throttling
    /// </summary>
    [pbr::OriginalName("REQUEST_LIMIT_EXCEEDED")] RequestLimitExceeded = 1007,
    /// <summary>
    /// If the user attempts to perform an invalid state transition on a shard.
    /// </summary>
    [pbr::OriginalName("INVALID_STATE_TRANSITION")] InvalidStateTransition = 2001,
    /// <summary>
    /// Unable to perform the operation because the shard was locked by some other operation.
    /// </summary>
    [pbr::OriginalName("COULD_NOT_ACQUIRE_LOCK")] CouldNotAcquireLock = 2002,
    /// <summary>
    /// Operation was performed on a resource that already exists.
    /// </summary>
    [pbr::OriginalName("RESOURCE_ALREADY_EXISTS")] ResourceAlreadyExists = 3001,
    /// <summary>
    /// Operation was performed on a resource that does not exist.
    /// </summary>
    [pbr::OriginalName("RESOURCE_DOES_NOT_EXIST")] ResourceDoesNotExist = 3002,
    [pbr::OriginalName("QUOTA_EXCEEDED")] QuotaExceeded = 4001,
    [pbr::OriginalName("MAX_BLOCK_SIZE_EXCEEDED")] MaxBlockSizeExceeded = 4002,
    [pbr::OriginalName("MAX_READ_SIZE_EXCEEDED")] MaxReadSizeExceeded = 4003,
    [pbr::OriginalName("DRY_RUN_FAILED")] DryRunFailed = 5001,
    /// <summary>
    /// Cluster request was rejected because it would exceed a resource limit.
    /// </summary>
    [pbr::OriginalName("RESOURCE_LIMIT_EXCEEDED")] ResourceLimitExceeded = 5002,
    [pbr::OriginalName("DIRECTORY_NOT_EMPTY")] DirectoryNotEmpty = 6001,
    [pbr::OriginalName("DIRECTORY_PROTECTED")] DirectoryProtected = 6002,
    [pbr::OriginalName("MAX_NOTEBOOK_SIZE_EXCEEDED")] MaxNotebookSizeExceeded = 6003,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Defines the set of options declared for every service RPC which are used to
  /// direct RPCs to endpoints, as well as other metadata about the RPC.
  /// </summary>
  public sealed partial class DatabricksRpcOptions : pb::IMessage<DatabricksRpcOptions> {
    private static readonly pb::MessageParser<DatabricksRpcOptions> _parser = new pb::MessageParser<DatabricksRpcOptions>(() => new DatabricksRpcOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatabricksRpcOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.DatabricksReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabricksRpcOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabricksRpcOptions(DatabricksRpcOptions other) : this() {
      endpoints_ = other.endpoints_.Clone();
      visibility_ = other.visibility_;
      errorCodes_ = other.errorCodes_.Clone();
      rateLimit_ = other.rateLimit_ != null ? other.rateLimit_.Clone() : null;
      rpcDocTitle_ = other.rpcDocTitle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabricksRpcOptions Clone() {
      return new DatabricksRpcOptions(this);
    }

    /// <summary>Field number for the "endpoints" field.</summary>
    public const int EndpointsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mlflow.HttpEndpoint> _repeated_endpoints_codec
        = pb::FieldCodec.ForMessage(10, global::Mlflow.HttpEndpoint.Parser);
    private readonly pbc::RepeatedField<global::Mlflow.HttpEndpoint> endpoints_ = new pbc::RepeatedField<global::Mlflow.HttpEndpoint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mlflow.HttpEndpoint> Endpoints {
      get { return endpoints_; }
    }

    /// <summary>Field number for the "visibility" field.</summary>
    public const int VisibilityFieldNumber = 2;
    private global::Mlflow.Visibility visibility_ = 0;
    /// <summary>
    /// Indicates which users are allowed to initiate this RPC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mlflow.Visibility Visibility {
      get { return visibility_; }
      set {
        visibility_ = value;
      }
    }

    /// <summary>Field number for the "error_codes" field.</summary>
    public const int ErrorCodesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Mlflow.ErrorCode> _repeated_errorCodes_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::Mlflow.ErrorCode) x);
    private readonly pbc::RepeatedField<global::Mlflow.ErrorCode> errorCodes_ = new pbc::RepeatedField<global::Mlflow.ErrorCode>();
    /// <summary>
    /// Complete definition of all error codes (from a statically defined set) which this method
    /// may return.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mlflow.ErrorCode> ErrorCodes {
      get { return errorCodes_; }
    }

    /// <summary>Field number for the "rate_limit" field.</summary>
    public const int RateLimitFieldNumber = 4;
    private global::Mlflow.RateLimit rateLimit_;
    /// <summary>
    /// If defined, a rate limit will be applied to this RPC for all requests from the API proxy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mlflow.RateLimit RateLimit {
      get { return rateLimit_; }
      set {
        rateLimit_ = value;
      }
    }

    /// <summary>Field number for the "rpc_doc_title" field.</summary>
    public const int RpcDocTitleFieldNumber = 5;
    private string rpcDocTitle_ = "";
    /// <summary>
    /// If defined, overrides the default title used for in the API docs. See ProtobufDocGenerator
    /// for more info.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RpcDocTitle {
      get { return rpcDocTitle_; }
      set {
        rpcDocTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatabricksRpcOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatabricksRpcOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!endpoints_.Equals(other.endpoints_)) return false;
      if (Visibility != other.Visibility) return false;
      if(!errorCodes_.Equals(other.errorCodes_)) return false;
      if (!object.Equals(RateLimit, other.RateLimit)) return false;
      if (RpcDocTitle != other.RpcDocTitle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= endpoints_.GetHashCode();
      if (Visibility != 0) hash ^= Visibility.GetHashCode();
      hash ^= errorCodes_.GetHashCode();
      if (rateLimit_ != null) hash ^= RateLimit.GetHashCode();
      if (RpcDocTitle.Length != 0) hash ^= RpcDocTitle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      endpoints_.WriteTo(output, _repeated_endpoints_codec);
      if (Visibility != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Visibility);
      }
      errorCodes_.WriteTo(output, _repeated_errorCodes_codec);
      if (rateLimit_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RateLimit);
      }
      if (RpcDocTitle.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RpcDocTitle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endpoints_.CalculateSize(_repeated_endpoints_codec);
      if (Visibility != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Visibility);
      }
      size += errorCodes_.CalculateSize(_repeated_errorCodes_codec);
      if (rateLimit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RateLimit);
      }
      if (RpcDocTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RpcDocTitle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatabricksRpcOptions other) {
      if (other == null) {
        return;
      }
      endpoints_.Add(other.endpoints_);
      if (other.Visibility != 0) {
        Visibility = other.Visibility;
      }
      errorCodes_.Add(other.errorCodes_);
      if (other.rateLimit_ != null) {
        if (rateLimit_ == null) {
          rateLimit_ = new global::Mlflow.RateLimit();
        }
        RateLimit.MergeFrom(other.RateLimit);
      }
      if (other.RpcDocTitle.Length != 0) {
        RpcDocTitle = other.RpcDocTitle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            endpoints_.AddEntriesFrom(input, _repeated_endpoints_codec);
            break;
          }
          case 16: {
            visibility_ = (global::Mlflow.Visibility) input.ReadEnum();
            break;
          }
          case 26:
          case 24: {
            errorCodes_.AddEntriesFrom(input, _repeated_errorCodes_codec);
            break;
          }
          case 34: {
            if (rateLimit_ == null) {
              rateLimit_ = new global::Mlflow.RateLimit();
            }
            input.ReadMessage(rateLimit_);
            break;
          }
          case 42: {
            RpcDocTitle = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HttpEndpoint : pb::IMessage<HttpEndpoint> {
    private static readonly pb::MessageParser<HttpEndpoint> _parser = new pb::MessageParser<HttpEndpoint>(() => new HttpEndpoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HttpEndpoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.DatabricksReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpEndpoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpEndpoint(HttpEndpoint other) : this() {
      method_ = other.method_;
      path_ = other.path_;
      since_ = other.since_ != null ? other.since_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpEndpoint Clone() {
      return new HttpEndpoint(this);
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 1;
    private string method_ = "";
    /// <summary>
    /// HTTP method like POST or GET.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private string path_ = "";
    /// <summary>
    /// Conceptual path of the API, like "/clusters" or "/clusters/create". Should start with a slash.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "since" field.</summary>
    public const int SinceFieldNumber = 3;
    private global::Mlflow.ApiVersion since_;
    /// <summary>
    /// A version like 1.1 which is prepended to the URL (e.g., GET /1.1/clusters).
    /// Breaking changes to an RPC must use a different version number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mlflow.ApiVersion Since {
      get { return since_; }
      set {
        since_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HttpEndpoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HttpEndpoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Method != other.Method) return false;
      if (Path != other.Path) return false;
      if (!object.Equals(Since, other.Since)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (since_ != null) hash ^= Since.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Method.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Method);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (since_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Since);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (since_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Since);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HttpEndpoint other) {
      if (other == null) {
        return;
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.since_ != null) {
        if (since_ == null) {
          since_ = new global::Mlflow.ApiVersion();
        }
        Since.MergeFrom(other.Since);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Method = input.ReadString();
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
          case 26: {
            if (since_ == null) {
              since_ = new global::Mlflow.ApiVersion();
            }
            input.ReadMessage(since_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApiVersion : pb::IMessage<ApiVersion> {
    private static readonly pb::MessageParser<ApiVersion> _parser = new pb::MessageParser<ApiVersion>(() => new ApiVersion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApiVersion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.DatabricksReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiVersion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiVersion(ApiVersion other) : this() {
      major_ = other.major_;
      minor_ = other.minor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiVersion Clone() {
      return new ApiVersion(this);
    }

    /// <summary>Field number for the "major" field.</summary>
    public const int MajorFieldNumber = 1;
    private int major_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Major {
      get { return major_; }
      set {
        major_ = value;
      }
    }

    /// <summary>Field number for the "minor" field.</summary>
    public const int MinorFieldNumber = 2;
    private int minor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Minor {
      get { return minor_; }
      set {
        minor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApiVersion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApiVersion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Major != other.Major) return false;
      if (Minor != other.Minor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Major != 0) hash ^= Major.GetHashCode();
      if (Minor != 0) hash ^= Minor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Major != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Major);
      }
      if (Minor != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Minor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Major != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Major);
      }
      if (Minor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Minor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApiVersion other) {
      if (other == null) {
        return;
      }
      if (other.Major != 0) {
        Major = other.Major;
      }
      if (other.Minor != 0) {
        Minor = other.Minor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Major = input.ReadInt32();
            break;
          }
          case 16: {
            Minor = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// API rate limits applied to RPCs coming from the API Proxy. The rate limits are applied on a
  /// per organization basis.
  /// </summary>
  public sealed partial class RateLimit : pb::IMessage<RateLimit> {
    private static readonly pb::MessageParser<RateLimit> _parser = new pb::MessageParser<RateLimit>(() => new RateLimit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RateLimit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.DatabricksReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateLimit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateLimit(RateLimit other) : this() {
      maxBurst_ = other.maxBurst_;
      maxSustainedPerSecond_ = other.maxSustainedPerSecond_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RateLimit Clone() {
      return new RateLimit(this);
    }

    /// <summary>Field number for the "max_burst" field.</summary>
    public const int MaxBurstFieldNumber = 1;
    private long maxBurst_;
    /// <summary>
    /// The maximum burst of API requests allowed for a single endpoint. In the context of the
    /// token bucket algorithm, this constant represents the total capacity of the token bucket.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxBurst {
      get { return maxBurst_; }
      set {
        maxBurst_ = value;
      }
    }

    /// <summary>Field number for the "max_sustained_per_second" field.</summary>
    public const int MaxSustainedPerSecondFieldNumber = 2;
    private long maxSustainedPerSecond_;
    /// <summary>
    /// The maximum sustained request per second limit for a single endpoint. In the context of the,
    /// token bucket algorithm, this constant represents the rate at which the token bucket fills.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxSustainedPerSecond {
      get { return maxSustainedPerSecond_; }
      set {
        maxSustainedPerSecond_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RateLimit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RateLimit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxBurst != other.MaxBurst) return false;
      if (MaxSustainedPerSecond != other.MaxSustainedPerSecond) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxBurst != 0L) hash ^= MaxBurst.GetHashCode();
      if (MaxSustainedPerSecond != 0L) hash ^= MaxSustainedPerSecond.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxBurst != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MaxBurst);
      }
      if (MaxSustainedPerSecond != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MaxSustainedPerSecond);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxBurst != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxBurst);
      }
      if (MaxSustainedPerSecond != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxSustainedPerSecond);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RateLimit other) {
      if (other == null) {
        return;
      }
      if (other.MaxBurst != 0L) {
        MaxBurst = other.MaxBurst;
      }
      if (other.MaxSustainedPerSecond != 0L) {
        MaxSustainedPerSecond = other.MaxSustainedPerSecond;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxBurst = input.ReadInt64();
            break;
          }
          case 16: {
            MaxSustainedPerSecond = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A block of documentation that is added to the AST after parsing the original protocol buffer.
  /// </summary>
  public sealed partial class DocumentationMetadata : pb::IMessage<DocumentationMetadata> {
    private static readonly pb::MessageParser<DocumentationMetadata> _parser = new pb::MessageParser<DocumentationMetadata>(() => new DocumentationMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocumentationMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.DatabricksReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentationMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentationMetadata(DocumentationMetadata other) : this() {
      docstring_ = other.docstring_;
      leadDoc_ = other.leadDoc_;
      visibility_ = other.visibility_;
      originalProtoPath_ = other.originalProtoPath_.Clone();
      position_ = other.position_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentationMetadata Clone() {
      return new DocumentationMetadata(this);
    }

    /// <summary>Field number for the "docstring" field.</summary>
    public const int DocstringFieldNumber = 1;
    private string docstring_ = "";
    /// <summary>
    /// The string of documentation attached to this particular item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Docstring {
      get { return docstring_; }
      set {
        docstring_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lead_doc" field.</summary>
    public const int LeadDocFieldNumber = 2;
    private string leadDoc_ = "";
    /// <summary>
    /// The string of documentation that is *before* this item. This only makes sense for top-level
    /// items such as (top-level) messages, (top-level) enumerations, or services. In all other
    /// cases, this string is empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LeadDoc {
      get { return leadDoc_; }
      set {
        leadDoc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "visibility" field.</summary>
    public const int VisibilityFieldNumber = 3;
    private global::Mlflow.Visibility visibility_ = 0;
    /// <summary>
    /// The visibility level when the docstring was generated.
    /// The documentation extractor builds multiple versions of the documentation, one for each
    /// visibility level. The documentation is then generated for each visibility level.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mlflow.Visibility Visibility {
      get { return visibility_; }
      set {
        visibility_ = value;
      }
    }

    /// <summary>Field number for the "original_proto_path" field.</summary>
    public const int OriginalProtoPathFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_originalProtoPath_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> originalProtoPath_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The original proto path in the internal representation. This is useful when performing field
    /// flattening to figure out what the original field was.
    /// One example is ["jobs","Run","original_attempt_run_id"] for jobs.
    /// This path is unique.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OriginalProtoPath {
      get { return originalProtoPath_; }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 5;
    private int position_;
    /// <summary>
    /// The location (line number) of the start of the documentation. This is required to keep the
    /// pieces of documentation sorted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocumentationMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocumentationMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Docstring != other.Docstring) return false;
      if (LeadDoc != other.LeadDoc) return false;
      if (Visibility != other.Visibility) return false;
      if(!originalProtoPath_.Equals(other.originalProtoPath_)) return false;
      if (Position != other.Position) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Docstring.Length != 0) hash ^= Docstring.GetHashCode();
      if (LeadDoc.Length != 0) hash ^= LeadDoc.GetHashCode();
      if (Visibility != 0) hash ^= Visibility.GetHashCode();
      hash ^= originalProtoPath_.GetHashCode();
      if (Position != 0) hash ^= Position.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Docstring.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Docstring);
      }
      if (LeadDoc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LeadDoc);
      }
      if (Visibility != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Visibility);
      }
      originalProtoPath_.WriteTo(output, _repeated_originalProtoPath_codec);
      if (Position != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Docstring.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Docstring);
      }
      if (LeadDoc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LeadDoc);
      }
      if (Visibility != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Visibility);
      }
      size += originalProtoPath_.CalculateSize(_repeated_originalProtoPath_codec);
      if (Position != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocumentationMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Docstring.Length != 0) {
        Docstring = other.Docstring;
      }
      if (other.LeadDoc.Length != 0) {
        LeadDoc = other.LeadDoc;
      }
      if (other.Visibility != 0) {
        Visibility = other.Visibility;
      }
      originalProtoPath_.Add(other.originalProtoPath_);
      if (other.Position != 0) {
        Position = other.Position;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Docstring = input.ReadString();
            break;
          }
          case 18: {
            LeadDoc = input.ReadString();
            break;
          }
          case 24: {
            visibility_ = (global::Mlflow.Visibility) input.ReadEnum();
            break;
          }
          case 34: {
            originalProtoPath_.AddEntriesFrom(input, _repeated_originalProtoPath_codec);
            break;
          }
          case 40: {
            Position = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Serialization format for DatabricksServiceException.
  /// </summary>
  public sealed partial class DatabricksServiceExceptionProto : pb::IMessage<DatabricksServiceExceptionProto> {
    private static readonly pb::MessageParser<DatabricksServiceExceptionProto> _parser = new pb::MessageParser<DatabricksServiceExceptionProto>(() => new DatabricksServiceExceptionProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatabricksServiceExceptionProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.DatabricksReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabricksServiceExceptionProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabricksServiceExceptionProto(DatabricksServiceExceptionProto other) : this() {
      errorCode_ = other.errorCode_;
      message_ = other.message_;
      stackTrace_ = other.stackTrace_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabricksServiceExceptionProto Clone() {
      return new DatabricksServiceExceptionProto(this);
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private global::Mlflow.ErrorCode errorCode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mlflow.ErrorCode ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stack_trace" field.</summary>
    public const int StackTraceFieldNumber = 3;
    private string stackTrace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StackTrace {
      get { return stackTrace_; }
      set {
        stackTrace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatabricksServiceExceptionProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatabricksServiceExceptionProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (Message != other.Message) return false;
      if (StackTrace != other.StackTrace) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (StackTrace.Length != 0) hash ^= StackTrace.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorCode);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (StackTrace.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StackTrace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (StackTrace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StackTrace);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatabricksServiceExceptionProto other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.StackTrace.Length != 0) {
        StackTrace = other.StackTrace;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            errorCode_ = (global::Mlflow.ErrorCode) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            StackTrace = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
