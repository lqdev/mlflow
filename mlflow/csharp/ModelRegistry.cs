// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: model_registry.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mlflow {

  /// <summary>Holder for reflection information generated from model_registry.proto</summary>
  public static partial class ModelRegistryReflection {

    #region Descriptor
    /// <summary>File descriptor for model_registry.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ModelRegistryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRtb2RlbF9yZWdpc3RyeS5wcm90bxIGbWxmbG93GhVzY2FsYXBiL3NjYWxh",
            "cGIucHJvdG8aEGRhdGFicmlja3MucHJvdG8i2gEKD1JlZ2lzdGVyZWRNb2Rl",
            "bBIMCgRuYW1lGAEgASgJEhoKEmNyZWF0aW9uX3RpbWVzdGFtcBgCIAEoAxIe",
            "ChZsYXN0X3VwZGF0ZWRfdGltZXN0YW1wGAMgASgDEg8KB3VzZXJfaWQYBCAB",
            "KAkSEwoLZGVzY3JpcHRpb24YBSABKAkSLQoPbGF0ZXN0X3ZlcnNpb25zGAYg",
            "AygLMhQubWxmbG93Lk1vZGVsVmVyc2lvbhIoCgR0YWdzGAcgAygLMhoubWxm",
            "bG93LlJlZ2lzdGVyZWRNb2RlbFRhZyLDAgoMTW9kZWxWZXJzaW9uEgwKBG5h",
            "bWUYASABKAkSDwoHdmVyc2lvbhgCIAEoCRIaChJjcmVhdGlvbl90aW1lc3Rh",
            "bXAYAyABKAMSHgoWbGFzdF91cGRhdGVkX3RpbWVzdGFtcBgEIAEoAxIPCgd1",
            "c2VyX2lkGAUgASgJEhUKDWN1cnJlbnRfc3RhZ2UYBiABKAkSEwoLZGVzY3Jp",
            "cHRpb24YByABKAkSDgoGc291cmNlGAggASgJEg4KBnJ1bl9pZBgJIAEoCRIq",
            "CgZzdGF0dXMYCiABKA4yGi5tbGZsb3cuTW9kZWxWZXJzaW9uU3RhdHVzEhYK",
            "DnN0YXR1c19tZXNzYWdlGAsgASgJEiUKBHRhZ3MYDCADKAsyFy5tbGZsb3cu",
            "TW9kZWxWZXJzaW9uVGFnEhAKCHJ1bl9saW5rGA0gASgJItYBChVDcmVhdGVS",
            "ZWdpc3RlcmVkTW9kZWwSEgoEbmFtZRgBIAEoCUIE+IYZARIoCgR0YWdzGAIg",
            "AygLMhoubWxmbG93LlJlZ2lzdGVyZWRNb2RlbFRhZxITCgtkZXNjcmlwdGlv",
            "bhgDIAEoCRo9CghSZXNwb25zZRIxChByZWdpc3RlcmVkX21vZGVsGAEgASgL",
            "MhcubWxmbG93LlJlZ2lzdGVyZWRNb2RlbDor4j8oCiZjb20uZGF0YWJyaWNr",
            "cy5ycGMuUlBDWyR0aGlzLlJlc3BvbnNlXSKpAQoVUmVuYW1lUmVnaXN0ZXJl",
            "ZE1vZGVsEhIKBG5hbWUYASABKAlCBPiGGQESEAoIbmV3X25hbWUYAiABKAka",
            "PQoIUmVzcG9uc2USMQoQcmVnaXN0ZXJlZF9tb2RlbBgBIAEoCzIXLm1sZmxv",
            "dy5SZWdpc3RlcmVkTW9kZWw6K+I/KAomY29tLmRhdGFicmlja3MucnBjLlJQ",
            "Q1skdGhpcy5SZXNwb25zZV0irAEKFVVwZGF0ZVJlZ2lzdGVyZWRNb2RlbBIS",
            "CgRuYW1lGAEgASgJQgT4hhkBEhMKC2Rlc2NyaXB0aW9uGAIgASgJGj0KCFJl",
            "c3BvbnNlEjEKEHJlZ2lzdGVyZWRfbW9kZWwYASABKAsyFy5tbGZsb3cuUmVn",
            "aXN0ZXJlZE1vZGVsOiviPygKJmNvbS5kYXRhYnJpY2tzLnJwYy5SUENbJHRo",
            "aXMuUmVzcG9uc2VdImQKFURlbGV0ZVJlZ2lzdGVyZWRNb2RlbBISCgRuYW1l",
            "GAEgASgJQgT4hhkBGgoKCFJlc3BvbnNlOiviPygKJmNvbS5kYXRhYnJpY2tz",
            "LnJwYy5SUENbJHRoaXMuUmVzcG9uc2VdIpQBChJHZXRSZWdpc3RlcmVkTW9k",
            "ZWwSEgoEbmFtZRgBIAEoCUIE+IYZARo9CghSZXNwb25zZRIxChByZWdpc3Rl",
            "cmVkX21vZGVsGAEgASgLMhcubWxmbG93LlJlZ2lzdGVyZWRNb2RlbDor4j8o",
            "CiZjb20uZGF0YWJyaWNrcy5ycGMuUlBDWyR0aGlzLlJlc3BvbnNlXSLFAQoU",
            "TGlzdFJlZ2lzdGVyZWRNb2RlbHMSEwoLbWF4X3Jlc3VsdHMYASABKAMSEgoK",
            "cGFnZV90b2tlbhgCIAEoCRpXCghSZXNwb25zZRIyChFyZWdpc3RlcmVkX21v",
            "ZGVscxgBIAMoCzIXLm1sZmxvdy5SZWdpc3RlcmVkTW9kZWwSFwoPbmV4dF9w",
            "YWdlX3Rva2VuGAIgASgJOiviPygKJmNvbS5kYXRhYnJpY2tzLnJwYy5SUENb",
            "JHRoaXMuUmVzcG9uc2VdIukBChZTZWFyY2hSZWdpc3RlcmVkTW9kZWxzEg4K",
            "BmZpbHRlchgBIAEoCRITCgttYXhfcmVzdWx0cxgCIAEoAxIQCghvcmRlcl9i",
            "eRgDIAMoCRISCgpwYWdlX3Rva2VuGAQgASgJGlcKCFJlc3BvbnNlEjIKEXJl",
            "Z2lzdGVyZWRfbW9kZWxzGAEgAygLMhcubWxmbG93LlJlZ2lzdGVyZWRNb2Rl",
            "bBIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAk6K+I/KAomY29tLmRhdGFicmlj",
            "a3MucnBjLlJQQ1skdGhpcy5SZXNwb25zZV0ingEKEUdldExhdGVzdFZlcnNp",
            "b25zEhIKBG5hbWUYASABKAlCBPiGGQESDgoGc3RhZ2VzGAIgAygJGjgKCFJl",
            "c3BvbnNlEiwKDm1vZGVsX3ZlcnNpb25zGAEgAygLMhQubWxmbG93Lk1vZGVs",
            "VmVyc2lvbjor4j8oCiZjb20uZGF0YWJyaWNrcy5ycGMuUlBDWyR0aGlzLlJl",
            "c3BvbnNlXSKCAgoSQ3JlYXRlTW9kZWxWZXJzaW9uEhIKBG5hbWUYASABKAlC",
            "BPiGGQESFAoGc291cmNlGAIgASgJQgT4hhkBEg4KBnJ1bl9pZBgDIAEoCRIl",
            "CgR0YWdzGAQgAygLMhcubWxmbG93Lk1vZGVsVmVyc2lvblRhZxIQCghydW5f",
            "bGluaxgFIAEoCRITCgtkZXNjcmlwdGlvbhgGIAEoCRo3CghSZXNwb25zZRIr",
            "Cg1tb2RlbF92ZXJzaW9uGAEgASgLMhQubWxmbG93Lk1vZGVsVmVyc2lvbjor",
            "4j8oCiZjb20uZGF0YWJyaWNrcy5ycGMuUlBDWyR0aGlzLlJlc3BvbnNlXSK6",
            "AQoSVXBkYXRlTW9kZWxWZXJzaW9uEhIKBG5hbWUYASABKAlCBPiGGQESFQoH",
            "dmVyc2lvbhgCIAEoCUIE+IYZARITCgtkZXNjcmlwdGlvbhgDIAEoCRo3CghS",
            "ZXNwb25zZRIrCg1tb2RlbF92ZXJzaW9uGAEgASgLMhQubWxmbG93Lk1vZGVs",
            "VmVyc2lvbjor4j8oCiZjb20uZGF0YWJyaWNrcy5ycGMuUlBDWyR0aGlzLlJl",
            "c3BvbnNlXSLsAQobVHJhbnNpdGlvbk1vZGVsVmVyc2lvblN0YWdlEhIKBG5h",
            "bWUYASABKAlCBPiGGQESFQoHdmVyc2lvbhgCIAEoCUIE+IYZARITCgVzdGFn",
            "ZRgDIAEoCUIE+IYZARInChlhcmNoaXZlX2V4aXN0aW5nX3ZlcnNpb25zGAQg",
            "ASgIQgT4hhkBGjcKCFJlc3BvbnNlEisKDW1vZGVsX3ZlcnNpb24YASABKAsy",
            "FC5tbGZsb3cuTW9kZWxWZXJzaW9uOiviPygKJmNvbS5kYXRhYnJpY2tzLnJw",
            "Yy5SUENbJHRoaXMuUmVzcG9uc2VdIngKEkRlbGV0ZU1vZGVsVmVyc2lvbhIS",
            "CgRuYW1lGAEgASgJQgT4hhkBEhUKB3ZlcnNpb24YAiABKAlCBPiGGQEaCgoI",
            "UmVzcG9uc2U6K+I/KAomY29tLmRhdGFicmlja3MucnBjLlJQQ1skdGhpcy5S",
            "ZXNwb25zZV0iogEKD0dldE1vZGVsVmVyc2lvbhISCgRuYW1lGAEgASgJQgT4",
            "hhkBEhUKB3ZlcnNpb24YAiABKAlCBPiGGQEaNwoIUmVzcG9uc2USKwoNbW9k",
            "ZWxfdmVyc2lvbhgBIAEoCzIULm1sZmxvdy5Nb2RlbFZlcnNpb246K+I/KAom",
            "Y29tLmRhdGFicmlja3MucnBjLlJQQ1skdGhpcy5SZXNwb25zZV0i4AEKE1Nl",
            "YXJjaE1vZGVsVmVyc2lvbnMSDgoGZmlsdGVyGAEgASgJEhMKC21heF9yZXN1",
            "bHRzGAIgASgDEhAKCG9yZGVyX2J5GAMgAygJEhIKCnBhZ2VfdG9rZW4YBCAB",
            "KAkaUQoIUmVzcG9uc2USLAoObW9kZWxfdmVyc2lvbnMYASADKAsyFC5tbGZs",
            "b3cuTW9kZWxWZXJzaW9uEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCTor4j8o",
            "CiZjb20uZGF0YWJyaWNrcy5ycGMuUlBDWyR0aGlzLlJlc3BvbnNlXSKWAQoa",
            "R2V0TW9kZWxWZXJzaW9uRG93bmxvYWRVcmkSEgoEbmFtZRgBIAEoCUIE+IYZ",
            "ARIVCgd2ZXJzaW9uGAIgASgJQgT4hhkBGiAKCFJlc3BvbnNlEhQKDGFydGlm",
            "YWN0X3VyaRgBIAEoCTor4j8oCiZjb20uZGF0YWJyaWNrcy5ycGMuUlBDWyR0",
            "aGlzLlJlc3BvbnNlXSItCg9Nb2RlbFZlcnNpb25UYWcSCwoDa2V5GAEgASgJ",
            "Eg0KBXZhbHVlGAIgASgJIjAKElJlZ2lzdGVyZWRNb2RlbFRhZxILCgNrZXkY",
            "ASABKAkSDQoFdmFsdWUYAiABKAkijAEKFVNldFJlZ2lzdGVyZWRNb2RlbFRh",
            "ZxISCgRuYW1lGAEgASgJQgT4hhkBEhEKA2tleRgCIAEoCUIE+IYZARITCgV2",
            "YWx1ZRgDIAEoCUIE+IYZARoKCghSZXNwb25zZTor4j8oCiZjb20uZGF0YWJy",
            "aWNrcy5ycGMuUlBDWyR0aGlzLlJlc3BvbnNlXSKgAQoSU2V0TW9kZWxWZXJz",
            "aW9uVGFnEhIKBG5hbWUYASABKAlCBPiGGQESFQoHdmVyc2lvbhgCIAEoCUIE",
            "+IYZARIRCgNrZXkYAyABKAlCBPiGGQESEwoFdmFsdWUYBCABKAlCBPiGGQEa",
            "CgoIUmVzcG9uc2U6K+I/KAomY29tLmRhdGFicmlja3MucnBjLlJQQ1skdGhp",
            "cy5SZXNwb25zZV0iegoYRGVsZXRlUmVnaXN0ZXJlZE1vZGVsVGFnEhIKBG5h",
            "bWUYASABKAlCBPiGGQESEQoDa2V5GAIgASgJQgT4hhkBGgoKCFJlc3BvbnNl",
            "OiviPygKJmNvbS5kYXRhYnJpY2tzLnJwYy5SUENbJHRoaXMuUmVzcG9uc2Vd",
            "Io4BChVEZWxldGVNb2RlbFZlcnNpb25UYWcSEgoEbmFtZRgBIAEoCUIE+IYZ",
            "ARIVCgd2ZXJzaW9uGAIgASgJQgT4hhkBEhEKA2tleRgDIAEoCUIE+IYZARoK",
            "CghSZXNwb25zZTor4j8oCiZjb20uZGF0YWJyaWNrcy5ycGMuUlBDWyR0aGlz",
            "LlJlc3BvbnNlXSpSChJNb2RlbFZlcnNpb25TdGF0dXMSGAoUUEVORElOR19S",
            "RUdJU1RSQVRJT04QABIXChNGQUlMRURfUkVHSVNUUkFUSU9OEAESCQoFUkVB",
            "RFkQAjL7GgoUTW9kZWxSZWdpc3RyeVNlcnZpY2USsgEKFWNyZWF0ZVJlZ2lz",
            "dGVyZWRNb2RlbBIdLm1sZmxvdy5DcmVhdGVSZWdpc3RlcmVkTW9kZWwaJi5t",
            "bGZsb3cuQ3JlYXRlUmVnaXN0ZXJlZE1vZGVsLlJlc3BvbnNlIlLyhhlOCjQK",
            "BFBPU1QSKC9wcmV2aWV3L21sZmxvdy9yZWdpc3RlcmVkLW1vZGVscy9jcmVh",
            "dGUaAggCKhZDcmVhdGUgUmVnaXN0ZXJlZE1vZGVsErIBChVyZW5hbWVSZWdp",
            "c3RlcmVkTW9kZWwSHS5tbGZsb3cuUmVuYW1lUmVnaXN0ZXJlZE1vZGVsGiYu",
            "bWxmbG93LlJlbmFtZVJlZ2lzdGVyZWRNb2RlbC5SZXNwb25zZSJS8oYZTgo0",
            "CgRQT1NUEigvcHJldmlldy9tbGZsb3cvcmVnaXN0ZXJlZC1tb2RlbHMvcmVu",
            "YW1lGgIIAioWUmVuYW1lIFJlZ2lzdGVyZWRNb2RlbBKzAQoVdXBkYXRlUmVn",
            "aXN0ZXJlZE1vZGVsEh0ubWxmbG93LlVwZGF0ZVJlZ2lzdGVyZWRNb2RlbBom",
            "Lm1sZmxvdy5VcGRhdGVSZWdpc3RlcmVkTW9kZWwuUmVzcG9uc2UiU/KGGU8K",
            "NQoFUEFUQ0gSKC9wcmV2aWV3L21sZmxvdy9yZWdpc3RlcmVkLW1vZGVscy91",
            "cGRhdGUaAggCKhZVcGRhdGUgUmVnaXN0ZXJlZE1vZGVsErQBChVkZWxldGVS",
            "ZWdpc3RlcmVkTW9kZWwSHS5tbGZsb3cuRGVsZXRlUmVnaXN0ZXJlZE1vZGVs",
            "GiYubWxmbG93LkRlbGV0ZVJlZ2lzdGVyZWRNb2RlbC5SZXNwb25zZSJU8oYZ",
            "UAo2CgZERUxFVEUSKC9wcmV2aWV3L21sZmxvdy9yZWdpc3RlcmVkLW1vZGVs",
            "cy9kZWxldGUaAggCKhZEZWxldGUgUmVnaXN0ZXJlZE1vZGVsEqIBChJnZXRS",
            "ZWdpc3RlcmVkTW9kZWwSGi5tbGZsb3cuR2V0UmVnaXN0ZXJlZE1vZGVsGiMu",
            "bWxmbG93LkdldFJlZ2lzdGVyZWRNb2RlbC5SZXNwb25zZSJL8oYZRwowCgNH",
            "RVQSJS9wcmV2aWV3L21sZmxvdy9yZWdpc3RlcmVkLW1vZGVscy9nZXQaAggC",
            "KhNHZXQgUmVnaXN0ZXJlZE1vZGVsErUBChZzZWFyY2hSZWdpc3RlcmVkTW9k",
            "ZWxzEh4ubWxmbG93LlNlYXJjaFJlZ2lzdGVyZWRNb2RlbHMaJy5tbGZsb3cu",
            "U2VhcmNoUmVnaXN0ZXJlZE1vZGVscy5SZXNwb25zZSJS8oYZTgozCgNHRVQS",
            "KC9wcmV2aWV3L21sZmxvdy9yZWdpc3RlcmVkLW1vZGVscy9zZWFyY2gaAggC",
            "KhdTZWFyY2ggUmVnaXN0ZXJlZE1vZGVscxKrAQoUbGlzdFJlZ2lzdGVyZWRN",
            "b2RlbHMSHC5tbGZsb3cuTGlzdFJlZ2lzdGVyZWRNb2RlbHMaJS5tbGZsb3cu",
            "TGlzdFJlZ2lzdGVyZWRNb2RlbHMuUmVzcG9uc2UiTvKGGUoKMQoDR0VUEiYv",
            "cHJldmlldy9tbGZsb3cvcmVnaXN0ZXJlZC1tb2RlbHMvbGlzdBoCCAIqFUxp",
            "c3QgUmVnaXN0ZXJlZE1vZGVscxK0AQoRZ2V0TGF0ZXN0VmVyc2lvbnMSGS5t",
            "bGZsb3cuR2V0TGF0ZXN0VmVyc2lvbnMaIi5tbGZsb3cuR2V0TGF0ZXN0VmVy",
            "c2lvbnMuUmVzcG9uc2UiYPKGGVwKQAoDR0VUEjUvcHJldmlldy9tbGZsb3cv",
            "cmVnaXN0ZXJlZC1tb2RlbHMvZ2V0LWxhdGVzdC12ZXJzaW9ucxoCCAIqGEdl",
            "dCBMYXRlc3QgTW9kZWxWZXJzaW9ucxKjAQoSY3JlYXRlTW9kZWxWZXJzaW9u",
            "EhoubWxmbG93LkNyZWF0ZU1vZGVsVmVyc2lvbhojLm1sZmxvdy5DcmVhdGVN",
            "b2RlbFZlcnNpb24uUmVzcG9uc2UiTPKGGUgKMQoEUE9TVBIlL3ByZXZpZXcv",
            "bWxmbG93L21vZGVsLXZlcnNpb25zL2NyZWF0ZRoCCAIqE0NyZWF0ZSBNb2Rl",
            "bFZlcnNpb24SpAEKEnVwZGF0ZU1vZGVsVmVyc2lvbhIaLm1sZmxvdy5VcGRh",
            "dGVNb2RlbFZlcnNpb24aIy5tbGZsb3cuVXBkYXRlTW9kZWxWZXJzaW9uLlJl",
            "c3BvbnNlIk3yhhlJCjIKBVBBVENIEiUvcHJldmlldy9tbGZsb3cvbW9kZWwt",
            "dmVyc2lvbnMvdXBkYXRlGgIIAioTVXBkYXRlIE1vZGVsVmVyc2lvbhLSAQob",
            "dHJhbnNpdGlvbk1vZGVsVmVyc2lvblN0YWdlEiMubWxmbG93LlRyYW5zaXRp",
            "b25Nb2RlbFZlcnNpb25TdGFnZRosLm1sZmxvdy5UcmFuc2l0aW9uTW9kZWxW",
            "ZXJzaW9uU3RhZ2UuUmVzcG9uc2UiYPKGGVwKOwoEUE9TVBIvL3ByZXZpZXcv",
            "bWxmbG93L21vZGVsLXZlcnNpb25zL3RyYW5zaXRpb24tc3RhZ2UaAggCKh1U",
            "cmFuc2l0aW9uIE1vZGVsVmVyc2lvbiBTdGFnZRKlAQoSZGVsZXRlTW9kZWxW",
            "ZXJzaW9uEhoubWxmbG93LkRlbGV0ZU1vZGVsVmVyc2lvbhojLm1sZmxvdy5E",
            "ZWxldGVNb2RlbFZlcnNpb24uUmVzcG9uc2UiTvKGGUoKMwoGREVMRVRFEiUv",
            "cHJldmlldy9tbGZsb3cvbW9kZWwtdmVyc2lvbnMvZGVsZXRlGgIIAioTRGVs",
            "ZXRlIE1vZGVsVmVyc2lvbhKTAQoPZ2V0TW9kZWxWZXJzaW9uEhcubWxmbG93",
            "LkdldE1vZGVsVmVyc2lvbhogLm1sZmxvdy5HZXRNb2RlbFZlcnNpb24uUmVz",
            "cG9uc2UiRfKGGUEKLQoDR0VUEiIvcHJldmlldy9tbGZsb3cvbW9kZWwtdmVy",
            "c2lvbnMvZ2V0GgIIAioQR2V0IE1vZGVsVmVyc2lvbhKmAQoTc2VhcmNoTW9k",
            "ZWxWZXJzaW9ucxIbLm1sZmxvdy5TZWFyY2hNb2RlbFZlcnNpb25zGiQubWxm",
            "bG93LlNlYXJjaE1vZGVsVmVyc2lvbnMuUmVzcG9uc2UiTPKGGUgKMAoDR0VU",
            "EiUvcHJldmlldy9tbGZsb3cvbW9kZWwtdmVyc2lvbnMvc2VhcmNoGgIIAioU",
            "U2VhcmNoIE1vZGVsVmVyc2lvbnMS3AEKGmdldE1vZGVsVmVyc2lvbkRvd25s",
            "b2FkVXJpEiIubWxmbG93LkdldE1vZGVsVmVyc2lvbkRvd25sb2FkVXJpGisu",
            "bWxmbG93LkdldE1vZGVsVmVyc2lvbkRvd25sb2FkVXJpLlJlc3BvbnNlIm3y",
            "hhlpCjoKA0dFVBIvL3ByZXZpZXcvbWxmbG93L21vZGVsLXZlcnNpb25zL2dl",
            "dC1kb3dubG9hZC11cmkaAggCKitHZXQgRG93bmxvYWQgVVJJIEZvciBNb2Rl",
            "bFZlcnNpb24gQXJ0aWZhY3RzErUBChVzZXRSZWdpc3RlcmVkTW9kZWxUYWcS",
            "HS5tbGZsb3cuU2V0UmVnaXN0ZXJlZE1vZGVsVGFnGiYubWxmbG93LlNldFJl",
            "Z2lzdGVyZWRNb2RlbFRhZy5SZXNwb25zZSJV8oYZUQo1CgRQT1NUEikvcHJl",
            "dmlldy9tbGZsb3cvcmVnaXN0ZXJlZC1tb2RlbHMvc2V0LXRhZxoCCAIqGFNl",
            "dCBSZWdpc3RlcmVkIE1vZGVsIFRhZxKmAQoSc2V0TW9kZWxWZXJzaW9uVGFn",
            "EhoubWxmbG93LlNldE1vZGVsVmVyc2lvblRhZxojLm1sZmxvdy5TZXRNb2Rl",
            "bFZlcnNpb25UYWcuUmVzcG9uc2UiT/KGGUsKMgoEUE9TVBImL3ByZXZpZXcv",
            "bWxmbG93L21vZGVsLXZlcnNpb25zL3NldC10YWcaAggCKhVTZXQgTW9kZWwg",
            "VmVyc2lvbiBUYWcSxgEKGGRlbGV0ZVJlZ2lzdGVyZWRNb2RlbFRhZxIgLm1s",
            "Zmxvdy5EZWxldGVSZWdpc3RlcmVkTW9kZWxUYWcaKS5tbGZsb3cuRGVsZXRl",
            "UmVnaXN0ZXJlZE1vZGVsVGFnLlJlc3BvbnNlIl3yhhlZCjoKBkRFTEVURRIs",
            "L3ByZXZpZXcvbWxmbG93L3JlZ2lzdGVyZWQtbW9kZWxzL2RlbGV0ZS10YWca",
            "AggCKhtEZWxldGUgUmVnaXN0ZXJlZCBNb2RlbCBUYWcStwEKFWRlbGV0ZU1v",
            "ZGVsVmVyc2lvblRhZxIdLm1sZmxvdy5EZWxldGVNb2RlbFZlcnNpb25UYWca",
            "Ji5tbGZsb3cuRGVsZXRlTW9kZWxWZXJzaW9uVGFnLlJlc3BvbnNlIlfyhhlT",
            "CjcKBkRFTEVURRIpL3ByZXZpZXcvbWxmbG93L21vZGVsLXZlcnNpb25zL2Rl",
            "bGV0ZS10YWcaAggCKhhEZWxldGUgTW9kZWwgVmVyc2lvbiBUYWdCIQoUb3Jn",
            "Lm1sZmxvdy5hcGkucHJvdG+QAQGgAQHiPwIQAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Scalapb.ScalapbReflection.Descriptor, global::Mlflow.DatabricksReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Mlflow.ModelVersionStatus), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.RegisteredModel), global::Mlflow.RegisteredModel.Parser, new[]{ "Name", "CreationTimestamp", "LastUpdatedTimestamp", "UserId", "Description", "LatestVersions", "Tags" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.ModelVersion), global::Mlflow.ModelVersion.Parser, new[]{ "Name", "Version", "CreationTimestamp", "LastUpdatedTimestamp", "UserId", "CurrentStage", "Description", "Source", "RunId", "Status", "StatusMessage", "Tags", "RunLink" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.CreateRegisteredModel), global::Mlflow.CreateRegisteredModel.Parser, new[]{ "Name", "Tags", "Description" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.CreateRegisteredModel.Types.Response), global::Mlflow.CreateRegisteredModel.Types.Response.Parser, new[]{ "RegisteredModel" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.RenameRegisteredModel), global::Mlflow.RenameRegisteredModel.Parser, new[]{ "Name", "NewName" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.RenameRegisteredModel.Types.Response), global::Mlflow.RenameRegisteredModel.Types.Response.Parser, new[]{ "RegisteredModel" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.UpdateRegisteredModel), global::Mlflow.UpdateRegisteredModel.Parser, new[]{ "Name", "Description" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.UpdateRegisteredModel.Types.Response), global::Mlflow.UpdateRegisteredModel.Types.Response.Parser, new[]{ "RegisteredModel" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.DeleteRegisteredModel), global::Mlflow.DeleteRegisteredModel.Parser, new[]{ "Name" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.DeleteRegisteredModel.Types.Response), global::Mlflow.DeleteRegisteredModel.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.GetRegisteredModel), global::Mlflow.GetRegisteredModel.Parser, new[]{ "Name" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.GetRegisteredModel.Types.Response), global::Mlflow.GetRegisteredModel.Types.Response.Parser, new[]{ "RegisteredModel" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.ListRegisteredModels), global::Mlflow.ListRegisteredModels.Parser, new[]{ "MaxResults", "PageToken" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.ListRegisteredModels.Types.Response), global::Mlflow.ListRegisteredModels.Types.Response.Parser, new[]{ "RegisteredModels", "NextPageToken" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.SearchRegisteredModels), global::Mlflow.SearchRegisteredModels.Parser, new[]{ "Filter", "MaxResults", "OrderBy", "PageToken" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.SearchRegisteredModels.Types.Response), global::Mlflow.SearchRegisteredModels.Types.Response.Parser, new[]{ "RegisteredModels", "NextPageToken" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.GetLatestVersions), global::Mlflow.GetLatestVersions.Parser, new[]{ "Name", "Stages" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.GetLatestVersions.Types.Response), global::Mlflow.GetLatestVersions.Types.Response.Parser, new[]{ "ModelVersions" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.CreateModelVersion), global::Mlflow.CreateModelVersion.Parser, new[]{ "Name", "Source", "RunId", "Tags", "RunLink", "Description" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.CreateModelVersion.Types.Response), global::Mlflow.CreateModelVersion.Types.Response.Parser, new[]{ "ModelVersion" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.UpdateModelVersion), global::Mlflow.UpdateModelVersion.Parser, new[]{ "Name", "Version", "Description" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.UpdateModelVersion.Types.Response), global::Mlflow.UpdateModelVersion.Types.Response.Parser, new[]{ "ModelVersion" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.TransitionModelVersionStage), global::Mlflow.TransitionModelVersionStage.Parser, new[]{ "Name", "Version", "Stage", "ArchiveExistingVersions" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.TransitionModelVersionStage.Types.Response), global::Mlflow.TransitionModelVersionStage.Types.Response.Parser, new[]{ "ModelVersion" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.DeleteModelVersion), global::Mlflow.DeleteModelVersion.Parser, new[]{ "Name", "Version" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.DeleteModelVersion.Types.Response), global::Mlflow.DeleteModelVersion.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.GetModelVersion), global::Mlflow.GetModelVersion.Parser, new[]{ "Name", "Version" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.GetModelVersion.Types.Response), global::Mlflow.GetModelVersion.Types.Response.Parser, new[]{ "ModelVersion" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.SearchModelVersions), global::Mlflow.SearchModelVersions.Parser, new[]{ "Filter", "MaxResults", "OrderBy", "PageToken" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.SearchModelVersions.Types.Response), global::Mlflow.SearchModelVersions.Types.Response.Parser, new[]{ "ModelVersions", "NextPageToken" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.GetModelVersionDownloadUri), global::Mlflow.GetModelVersionDownloadUri.Parser, new[]{ "Name", "Version" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.GetModelVersionDownloadUri.Types.Response), global::Mlflow.GetModelVersionDownloadUri.Types.Response.Parser, new[]{ "ArtifactUri" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.ModelVersionTag), global::Mlflow.ModelVersionTag.Parser, new[]{ "Key", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.RegisteredModelTag), global::Mlflow.RegisteredModelTag.Parser, new[]{ "Key", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.SetRegisteredModelTag), global::Mlflow.SetRegisteredModelTag.Parser, new[]{ "Name", "Key", "Value" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.SetRegisteredModelTag.Types.Response), global::Mlflow.SetRegisteredModelTag.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.SetModelVersionTag), global::Mlflow.SetModelVersionTag.Parser, new[]{ "Name", "Version", "Key", "Value" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.SetModelVersionTag.Types.Response), global::Mlflow.SetModelVersionTag.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.DeleteRegisteredModelTag), global::Mlflow.DeleteRegisteredModelTag.Parser, new[]{ "Name", "Key" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.DeleteRegisteredModelTag.Types.Response), global::Mlflow.DeleteRegisteredModelTag.Types.Response.Parser, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.DeleteModelVersionTag), global::Mlflow.DeleteModelVersionTag.Parser, new[]{ "Name", "Version", "Key" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.DeleteModelVersionTag.Types.Response), global::Mlflow.DeleteModelVersionTag.Types.Response.Parser, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// .. note::
  ///     Experimental: This entity may change or be removed in a future release without warning.
  /// </summary>
  public enum ModelVersionStatus {
    /// <summary>
    /// Request to register a new model version is pending as server performs background tasks.
    /// </summary>
    [pbr::OriginalName("PENDING_REGISTRATION")] PendingRegistration = 0,
    /// <summary>
    /// Request to register a new model version has failed.
    /// </summary>
    [pbr::OriginalName("FAILED_REGISTRATION")] FailedRegistration = 1,
    /// <summary>
    /// Model version is ready for use.
    /// </summary>
    [pbr::OriginalName("READY")] Ready = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// .. note::
  ///     Experimental: This entity may change or be removed in a future release without warning.
  /// </summary>
  public sealed partial class RegisteredModel : pb::IMessage<RegisteredModel> {
    private static readonly pb::MessageParser<RegisteredModel> _parser = new pb::MessageParser<RegisteredModel>(() => new RegisteredModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisteredModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisteredModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisteredModel(RegisteredModel other) : this() {
      name_ = other.name_;
      creationTimestamp_ = other.creationTimestamp_;
      lastUpdatedTimestamp_ = other.lastUpdatedTimestamp_;
      userId_ = other.userId_;
      description_ = other.description_;
      latestVersions_ = other.latestVersions_.Clone();
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisteredModel Clone() {
      return new RegisteredModel(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Unique name for the model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "creation_timestamp" field.</summary>
    public const int CreationTimestampFieldNumber = 2;
    private long creationTimestamp_;
    /// <summary>
    /// Timestamp recorded when this ``registered_model`` was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreationTimestamp {
      get { return creationTimestamp_; }
      set {
        creationTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "last_updated_timestamp" field.</summary>
    public const int LastUpdatedTimestampFieldNumber = 3;
    private long lastUpdatedTimestamp_;
    /// <summary>
    /// Timestamp recorded when metadata for this ``registered_model`` was last updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastUpdatedTimestamp {
      get { return lastUpdatedTimestamp_; }
      set {
        lastUpdatedTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 4;
    private string userId_ = "";
    /// <summary>
    /// User that created this ``registered_model``
    /// NOTE: this field is not currently returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    /// <summary>
    /// Description of this ``registered_model``.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "latest_versions" field.</summary>
    public const int LatestVersionsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Mlflow.ModelVersion> _repeated_latestVersions_codec
        = pb::FieldCodec.ForMessage(50, global::Mlflow.ModelVersion.Parser);
    private readonly pbc::RepeatedField<global::Mlflow.ModelVersion> latestVersions_ = new pbc::RepeatedField<global::Mlflow.ModelVersion>();
    /// <summary>
    /// Collection of latest model versions for each stage.
    /// Only contains models with current ``READY`` status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mlflow.ModelVersion> LatestVersions {
      get { return latestVersions_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Mlflow.RegisteredModelTag> _repeated_tags_codec
        = pb::FieldCodec.ForMessage(58, global::Mlflow.RegisteredModelTag.Parser);
    private readonly pbc::RepeatedField<global::Mlflow.RegisteredModelTag> tags_ = new pbc::RepeatedField<global::Mlflow.RegisteredModelTag>();
    /// <summary>
    /// Tags: Additional metadata key-value pairs for this ``registered_model``.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mlflow.RegisteredModelTag> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisteredModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisteredModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (CreationTimestamp != other.CreationTimestamp) return false;
      if (LastUpdatedTimestamp != other.LastUpdatedTimestamp) return false;
      if (UserId != other.UserId) return false;
      if (Description != other.Description) return false;
      if(!latestVersions_.Equals(other.latestVersions_)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (CreationTimestamp != 0L) hash ^= CreationTimestamp.GetHashCode();
      if (LastUpdatedTimestamp != 0L) hash ^= LastUpdatedTimestamp.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= latestVersions_.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (CreationTimestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CreationTimestamp);
      }
      if (LastUpdatedTimestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(LastUpdatedTimestamp);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UserId);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      latestVersions_.WriteTo(output, _repeated_latestVersions_codec);
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (CreationTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreationTimestamp);
      }
      if (LastUpdatedTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastUpdatedTimestamp);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += latestVersions_.CalculateSize(_repeated_latestVersions_codec);
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisteredModel other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.CreationTimestamp != 0L) {
        CreationTimestamp = other.CreationTimestamp;
      }
      if (other.LastUpdatedTimestamp != 0L) {
        LastUpdatedTimestamp = other.LastUpdatedTimestamp;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      latestVersions_.Add(other.latestVersions_);
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            CreationTimestamp = input.ReadInt64();
            break;
          }
          case 24: {
            LastUpdatedTimestamp = input.ReadInt64();
            break;
          }
          case 34: {
            UserId = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            latestVersions_.AddEntriesFrom(input, _repeated_latestVersions_codec);
            break;
          }
          case 58: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// .. note::
  ///     Experimental: This entity may change or be removed in a future release without warning.
  /// </summary>
  public sealed partial class ModelVersion : pb::IMessage<ModelVersion> {
    private static readonly pb::MessageParser<ModelVersion> _parser = new pb::MessageParser<ModelVersion>(() => new ModelVersion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelVersion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelVersion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelVersion(ModelVersion other) : this() {
      name_ = other.name_;
      version_ = other.version_;
      creationTimestamp_ = other.creationTimestamp_;
      lastUpdatedTimestamp_ = other.lastUpdatedTimestamp_;
      userId_ = other.userId_;
      currentStage_ = other.currentStage_;
      description_ = other.description_;
      source_ = other.source_;
      runId_ = other.runId_;
      status_ = other.status_;
      statusMessage_ = other.statusMessage_;
      tags_ = other.tags_.Clone();
      runLink_ = other.runLink_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelVersion Clone() {
      return new ModelVersion(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Unique name of the model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    /// <summary>
    /// Model's version number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "creation_timestamp" field.</summary>
    public const int CreationTimestampFieldNumber = 3;
    private long creationTimestamp_;
    /// <summary>
    /// Timestamp recorded when this ``model_version`` was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreationTimestamp {
      get { return creationTimestamp_; }
      set {
        creationTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "last_updated_timestamp" field.</summary>
    public const int LastUpdatedTimestampFieldNumber = 4;
    private long lastUpdatedTimestamp_;
    /// <summary>
    /// Timestamp recorded when metadata for this ``model_version`` was last updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastUpdatedTimestamp {
      get { return lastUpdatedTimestamp_; }
      set {
        lastUpdatedTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 5;
    private string userId_ = "";
    /// <summary>
    /// User that created this ``model_version``.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "current_stage" field.</summary>
    public const int CurrentStageFieldNumber = 6;
    private string currentStage_ = "";
    /// <summary>
    /// Current stage for this ``model_version``.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrentStage {
      get { return currentStage_; }
      set {
        currentStage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 7;
    private string description_ = "";
    /// <summary>
    /// Description of this ``model_version``.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 8;
    private string source_ = "";
    /// <summary>
    /// URI indicating the location of the source model artifacts, used when creating ``model_version``
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "run_id" field.</summary>
    public const int RunIdFieldNumber = 9;
    private string runId_ = "";
    /// <summary>
    /// MLflow run ID used when creating ``model_version``, if ``source`` was generated by an
    /// experiment run stored in MLflow tracking server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RunId {
      get { return runId_; }
      set {
        runId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 10;
    private global::Mlflow.ModelVersionStatus status_ = 0;
    /// <summary>
    /// Current status of ``model_version``
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mlflow.ModelVersionStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "status_message" field.</summary>
    public const int StatusMessageFieldNumber = 11;
    private string statusMessage_ = "";
    /// <summary>
    /// Details on current ``status``, if it is pending or failed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusMessage {
      get { return statusMessage_; }
      set {
        statusMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Mlflow.ModelVersionTag> _repeated_tags_codec
        = pb::FieldCodec.ForMessage(98, global::Mlflow.ModelVersionTag.Parser);
    private readonly pbc::RepeatedField<global::Mlflow.ModelVersionTag> tags_ = new pbc::RepeatedField<global::Mlflow.ModelVersionTag>();
    /// <summary>
    /// Tags: Additional metadata key-value pairs for this ``model_version``.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mlflow.ModelVersionTag> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "run_link" field.</summary>
    public const int RunLinkFieldNumber = 13;
    private string runLink_ = "";
    /// <summary>
    /// Run Link: Direct link to the run that generated this version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RunLink {
      get { return runLink_; }
      set {
        runLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelVersion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelVersion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Version != other.Version) return false;
      if (CreationTimestamp != other.CreationTimestamp) return false;
      if (LastUpdatedTimestamp != other.LastUpdatedTimestamp) return false;
      if (UserId != other.UserId) return false;
      if (CurrentStage != other.CurrentStage) return false;
      if (Description != other.Description) return false;
      if (Source != other.Source) return false;
      if (RunId != other.RunId) return false;
      if (Status != other.Status) return false;
      if (StatusMessage != other.StatusMessage) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (RunLink != other.RunLink) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (CreationTimestamp != 0L) hash ^= CreationTimestamp.GetHashCode();
      if (LastUpdatedTimestamp != 0L) hash ^= LastUpdatedTimestamp.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (CurrentStage.Length != 0) hash ^= CurrentStage.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      if (RunId.Length != 0) hash ^= RunId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (StatusMessage.Length != 0) hash ^= StatusMessage.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (RunLink.Length != 0) hash ^= RunLink.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (CreationTimestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CreationTimestamp);
      }
      if (LastUpdatedTimestamp != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(LastUpdatedTimestamp);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UserId);
      }
      if (CurrentStage.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CurrentStage);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Description);
      }
      if (Source.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Source);
      }
      if (RunId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(RunId);
      }
      if (Status != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Status);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(StatusMessage);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (RunLink.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(RunLink);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (CreationTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreationTimestamp);
      }
      if (LastUpdatedTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastUpdatedTimestamp);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (CurrentStage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrentStage);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (RunId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RunId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (StatusMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusMessage);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (RunLink.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RunLink);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelVersion other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.CreationTimestamp != 0L) {
        CreationTimestamp = other.CreationTimestamp;
      }
      if (other.LastUpdatedTimestamp != 0L) {
        LastUpdatedTimestamp = other.LastUpdatedTimestamp;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.CurrentStage.Length != 0) {
        CurrentStage = other.CurrentStage;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      if (other.RunId.Length != 0) {
        RunId = other.RunId;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.StatusMessage.Length != 0) {
        StatusMessage = other.StatusMessage;
      }
      tags_.Add(other.tags_);
      if (other.RunLink.Length != 0) {
        RunLink = other.RunLink;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 24: {
            CreationTimestamp = input.ReadInt64();
            break;
          }
          case 32: {
            LastUpdatedTimestamp = input.ReadInt64();
            break;
          }
          case 42: {
            UserId = input.ReadString();
            break;
          }
          case 50: {
            CurrentStage = input.ReadString();
            break;
          }
          case 58: {
            Description = input.ReadString();
            break;
          }
          case 66: {
            Source = input.ReadString();
            break;
          }
          case 74: {
            RunId = input.ReadString();
            break;
          }
          case 80: {
            status_ = (global::Mlflow.ModelVersionStatus) input.ReadEnum();
            break;
          }
          case 90: {
            StatusMessage = input.ReadString();
            break;
          }
          case 98: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 106: {
            RunLink = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateRegisteredModel : pb::IMessage<CreateRegisteredModel> {
    private static readonly pb::MessageParser<CreateRegisteredModel> _parser = new pb::MessageParser<CreateRegisteredModel>(() => new CreateRegisteredModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateRegisteredModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRegisteredModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRegisteredModel(CreateRegisteredModel other) : this() {
      name_ = other.name_;
      tags_ = other.tags_.Clone();
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateRegisteredModel Clone() {
      return new CreateRegisteredModel(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Register models under this name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mlflow.RegisteredModelTag> _repeated_tags_codec
        = pb::FieldCodec.ForMessage(18, global::Mlflow.RegisteredModelTag.Parser);
    private readonly pbc::RepeatedField<global::Mlflow.RegisteredModelTag> tags_ = new pbc::RepeatedField<global::Mlflow.RegisteredModelTag>();
    /// <summary>
    /// Additional metadata for registered model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mlflow.RegisteredModelTag> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Optional description for registered model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateRegisteredModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateRegisteredModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateRegisteredModel other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      tags_.Add(other.tags_);
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CreateRegisteredModel message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.CreateRegisteredModel.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          registeredModel_ = other.registeredModel_ != null ? other.registeredModel_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "registered_model" field.</summary>
        public const int RegisteredModelFieldNumber = 1;
        private global::Mlflow.RegisteredModel registeredModel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mlflow.RegisteredModel RegisteredModel {
          get { return registeredModel_; }
          set {
            registeredModel_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(RegisteredModel, other.RegisteredModel)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (registeredModel_ != null) hash ^= RegisteredModel.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (registeredModel_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(RegisteredModel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (registeredModel_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisteredModel);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.registeredModel_ != null) {
            if (registeredModel_ == null) {
              registeredModel_ = new global::Mlflow.RegisteredModel();
            }
            RegisteredModel.MergeFrom(other.RegisteredModel);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (registeredModel_ == null) {
                  registeredModel_ = new global::Mlflow.RegisteredModel();
                }
                input.ReadMessage(registeredModel_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class RenameRegisteredModel : pb::IMessage<RenameRegisteredModel> {
    private static readonly pb::MessageParser<RenameRegisteredModel> _parser = new pb::MessageParser<RenameRegisteredModel>(() => new RenameRegisteredModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RenameRegisteredModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RenameRegisteredModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RenameRegisteredModel(RenameRegisteredModel other) : this() {
      name_ = other.name_;
      newName_ = other.newName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RenameRegisteredModel Clone() {
      return new RenameRegisteredModel(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Registered model unique name identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "new_name" field.</summary>
    public const int NewNameFieldNumber = 2;
    private string newName_ = "";
    /// <summary>
    /// If provided, updates the name for this ``registered_model``.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NewName {
      get { return newName_; }
      set {
        newName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RenameRegisteredModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RenameRegisteredModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (NewName != other.NewName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (NewName.Length != 0) hash ^= NewName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (NewName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NewName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (NewName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RenameRegisteredModel other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.NewName.Length != 0) {
        NewName = other.NewName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            NewName = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RenameRegisteredModel message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.RenameRegisteredModel.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          registeredModel_ = other.registeredModel_ != null ? other.registeredModel_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "registered_model" field.</summary>
        public const int RegisteredModelFieldNumber = 1;
        private global::Mlflow.RegisteredModel registeredModel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mlflow.RegisteredModel RegisteredModel {
          get { return registeredModel_; }
          set {
            registeredModel_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(RegisteredModel, other.RegisteredModel)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (registeredModel_ != null) hash ^= RegisteredModel.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (registeredModel_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(RegisteredModel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (registeredModel_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisteredModel);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.registeredModel_ != null) {
            if (registeredModel_ == null) {
              registeredModel_ = new global::Mlflow.RegisteredModel();
            }
            RegisteredModel.MergeFrom(other.RegisteredModel);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (registeredModel_ == null) {
                  registeredModel_ = new global::Mlflow.RegisteredModel();
                }
                input.ReadMessage(registeredModel_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class UpdateRegisteredModel : pb::IMessage<UpdateRegisteredModel> {
    private static readonly pb::MessageParser<UpdateRegisteredModel> _parser = new pb::MessageParser<UpdateRegisteredModel>(() => new UpdateRegisteredModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRegisteredModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRegisteredModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRegisteredModel(UpdateRegisteredModel other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRegisteredModel Clone() {
      return new UpdateRegisteredModel(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Registered model unique name identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// If provided, updates the description for this ``registered_model``.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRegisteredModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRegisteredModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRegisteredModel other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UpdateRegisteredModel message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.UpdateRegisteredModel.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          registeredModel_ = other.registeredModel_ != null ? other.registeredModel_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "registered_model" field.</summary>
        public const int RegisteredModelFieldNumber = 1;
        private global::Mlflow.RegisteredModel registeredModel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mlflow.RegisteredModel RegisteredModel {
          get { return registeredModel_; }
          set {
            registeredModel_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(RegisteredModel, other.RegisteredModel)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (registeredModel_ != null) hash ^= RegisteredModel.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (registeredModel_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(RegisteredModel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (registeredModel_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisteredModel);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.registeredModel_ != null) {
            if (registeredModel_ == null) {
              registeredModel_ = new global::Mlflow.RegisteredModel();
            }
            RegisteredModel.MergeFrom(other.RegisteredModel);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (registeredModel_ == null) {
                  registeredModel_ = new global::Mlflow.RegisteredModel();
                }
                input.ReadMessage(registeredModel_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class DeleteRegisteredModel : pb::IMessage<DeleteRegisteredModel> {
    private static readonly pb::MessageParser<DeleteRegisteredModel> _parser = new pb::MessageParser<DeleteRegisteredModel>(() => new DeleteRegisteredModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRegisteredModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRegisteredModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRegisteredModel(DeleteRegisteredModel other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRegisteredModel Clone() {
      return new DeleteRegisteredModel(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Registered model unique name identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRegisteredModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRegisteredModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRegisteredModel other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DeleteRegisteredModel message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.DeleteRegisteredModel.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetRegisteredModel : pb::IMessage<GetRegisteredModel> {
    private static readonly pb::MessageParser<GetRegisteredModel> _parser = new pb::MessageParser<GetRegisteredModel>(() => new GetRegisteredModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRegisteredModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRegisteredModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRegisteredModel(GetRegisteredModel other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRegisteredModel Clone() {
      return new GetRegisteredModel(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Registered model unique name identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRegisteredModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRegisteredModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRegisteredModel other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetRegisteredModel message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.GetRegisteredModel.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          registeredModel_ = other.registeredModel_ != null ? other.registeredModel_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "registered_model" field.</summary>
        public const int RegisteredModelFieldNumber = 1;
        private global::Mlflow.RegisteredModel registeredModel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mlflow.RegisteredModel RegisteredModel {
          get { return registeredModel_; }
          set {
            registeredModel_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(RegisteredModel, other.RegisteredModel)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (registeredModel_ != null) hash ^= RegisteredModel.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (registeredModel_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(RegisteredModel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (registeredModel_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisteredModel);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.registeredModel_ != null) {
            if (registeredModel_ == null) {
              registeredModel_ = new global::Mlflow.RegisteredModel();
            }
            RegisteredModel.MergeFrom(other.RegisteredModel);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (registeredModel_ == null) {
                  registeredModel_ = new global::Mlflow.RegisteredModel();
                }
                input.ReadMessage(registeredModel_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class ListRegisteredModels : pb::IMessage<ListRegisteredModels> {
    private static readonly pb::MessageParser<ListRegisteredModels> _parser = new pb::MessageParser<ListRegisteredModels>(() => new ListRegisteredModels());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRegisteredModels> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRegisteredModels() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRegisteredModels(ListRegisteredModels other) : this() {
      maxResults_ = other.maxResults_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRegisteredModels Clone() {
      return new ListRegisteredModels(this);
    }

    /// <summary>Field number for the "max_results" field.</summary>
    public const int MaxResultsFieldNumber = 1;
    private long maxResults_;
    /// <summary>
    /// Maximum number of registered models desired. Max threshold is 1000.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxResults {
      get { return maxResults_; }
      set {
        maxResults_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 2;
    private string pageToken_ = "";
    /// <summary>
    /// Pagination token to go to the next page based on a previous query.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRegisteredModels);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRegisteredModels other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxResults != other.MaxResults) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxResults != 0L) hash ^= MaxResults.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxResults != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MaxResults);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxResults != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxResults);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRegisteredModels other) {
      if (other == null) {
        return;
      }
      if (other.MaxResults != 0L) {
        MaxResults = other.MaxResults;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxResults = input.ReadInt64();
            break;
          }
          case 18: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ListRegisteredModels message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.ListRegisteredModels.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          registeredModels_ = other.registeredModels_.Clone();
          nextPageToken_ = other.nextPageToken_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "registered_models" field.</summary>
        public const int RegisteredModelsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Mlflow.RegisteredModel> _repeated_registeredModels_codec
            = pb::FieldCodec.ForMessage(10, global::Mlflow.RegisteredModel.Parser);
        private readonly pbc::RepeatedField<global::Mlflow.RegisteredModel> registeredModels_ = new pbc::RepeatedField<global::Mlflow.RegisteredModel>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Mlflow.RegisteredModel> RegisteredModels {
          get { return registeredModels_; }
        }

        /// <summary>Field number for the "next_page_token" field.</summary>
        public const int NextPageTokenFieldNumber = 2;
        private string nextPageToken_ = "";
        /// <summary>
        /// Pagination token to request next page of models for the same query.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string NextPageToken {
          get { return nextPageToken_; }
          set {
            nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!registeredModels_.Equals(other.registeredModels_)) return false;
          if (NextPageToken != other.NextPageToken) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= registeredModels_.GetHashCode();
          if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          registeredModels_.WriteTo(output, _repeated_registeredModels_codec);
          if (NextPageToken.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(NextPageToken);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += registeredModels_.CalculateSize(_repeated_registeredModels_codec);
          if (NextPageToken.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          registeredModels_.Add(other.registeredModels_);
          if (other.NextPageToken.Length != 0) {
            NextPageToken = other.NextPageToken;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                registeredModels_.AddEntriesFrom(input, _repeated_registeredModels_codec);
                break;
              }
              case 18: {
                NextPageToken = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class SearchRegisteredModels : pb::IMessage<SearchRegisteredModels> {
    private static readonly pb::MessageParser<SearchRegisteredModels> _parser = new pb::MessageParser<SearchRegisteredModels>(() => new SearchRegisteredModels());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchRegisteredModels> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRegisteredModels() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRegisteredModels(SearchRegisteredModels other) : this() {
      filter_ = other.filter_;
      maxResults_ = other.maxResults_;
      orderBy_ = other.orderBy_.Clone();
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRegisteredModels Clone() {
      return new SearchRegisteredModels(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private string filter_ = "";
    /// <summary>
    /// String filter condition, like "name LIKE 'my-model-name'".
    /// Interpreted in the backend automatically as "name LIKE '%my-model-name%'".
    /// Single boolean condition, with string values wrapped in single quotes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_results" field.</summary>
    public const int MaxResultsFieldNumber = 2;
    private long maxResults_;
    /// <summary>
    /// Maximum number of models desired. Default is 100. Max threshold is 1000.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxResults {
      get { return maxResults_; }
      set {
        maxResults_ = value;
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_orderBy_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> orderBy_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of columns for ordering search results, which can include model name and last updated
    /// timestamp with an optional "DESC" or "ASC" annotation, where "ASC" is the default.
    /// Tiebreaks are done by model name ASC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OrderBy {
      get { return orderBy_; }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 4;
    private string pageToken_ = "";
    /// <summary>
    /// Pagination token to go to the next page based on a previous search query.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchRegisteredModels);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchRegisteredModels other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      if (MaxResults != other.MaxResults) return false;
      if(!orderBy_.Equals(other.orderBy_)) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (MaxResults != 0L) hash ^= MaxResults.GetHashCode();
      hash ^= orderBy_.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (MaxResults != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MaxResults);
      }
      orderBy_.WriteTo(output, _repeated_orderBy_codec);
      if (PageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (MaxResults != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxResults);
      }
      size += orderBy_.CalculateSize(_repeated_orderBy_codec);
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchRegisteredModels other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.MaxResults != 0L) {
        MaxResults = other.MaxResults;
      }
      orderBy_.Add(other.orderBy_);
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
          case 16: {
            MaxResults = input.ReadInt64();
            break;
          }
          case 26: {
            orderBy_.AddEntriesFrom(input, _repeated_orderBy_codec);
            break;
          }
          case 34: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SearchRegisteredModels message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.SearchRegisteredModels.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          registeredModels_ = other.registeredModels_.Clone();
          nextPageToken_ = other.nextPageToken_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "registered_models" field.</summary>
        public const int RegisteredModelsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Mlflow.RegisteredModel> _repeated_registeredModels_codec
            = pb::FieldCodec.ForMessage(10, global::Mlflow.RegisteredModel.Parser);
        private readonly pbc::RepeatedField<global::Mlflow.RegisteredModel> registeredModels_ = new pbc::RepeatedField<global::Mlflow.RegisteredModel>();
        /// <summary>
        /// Registered Models that match the search criteria.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Mlflow.RegisteredModel> RegisteredModels {
          get { return registeredModels_; }
        }

        /// <summary>Field number for the "next_page_token" field.</summary>
        public const int NextPageTokenFieldNumber = 2;
        private string nextPageToken_ = "";
        /// <summary>
        /// Pagination token to request the next page of models.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string NextPageToken {
          get { return nextPageToken_; }
          set {
            nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!registeredModels_.Equals(other.registeredModels_)) return false;
          if (NextPageToken != other.NextPageToken) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= registeredModels_.GetHashCode();
          if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          registeredModels_.WriteTo(output, _repeated_registeredModels_codec);
          if (NextPageToken.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(NextPageToken);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += registeredModels_.CalculateSize(_repeated_registeredModels_codec);
          if (NextPageToken.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          registeredModels_.Add(other.registeredModels_);
          if (other.NextPageToken.Length != 0) {
            NextPageToken = other.NextPageToken;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                registeredModels_.AddEntriesFrom(input, _repeated_registeredModels_codec);
                break;
              }
              case 18: {
                NextPageToken = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetLatestVersions : pb::IMessage<GetLatestVersions> {
    private static readonly pb::MessageParser<GetLatestVersions> _parser = new pb::MessageParser<GetLatestVersions>(() => new GetLatestVersions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLatestVersions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLatestVersions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLatestVersions(GetLatestVersions other) : this() {
      name_ = other.name_;
      stages_ = other.stages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLatestVersions Clone() {
      return new GetLatestVersions(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Registered model unique name identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stages" field.</summary>
    public const int StagesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_stages_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> stages_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of stages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Stages {
      get { return stages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLatestVersions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLatestVersions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!stages_.Equals(other.stages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= stages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      stages_.WriteTo(output, _repeated_stages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += stages_.CalculateSize(_repeated_stages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLatestVersions other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      stages_.Add(other.stages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            stages_.AddEntriesFrom(input, _repeated_stages_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetLatestVersions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.GetLatestVersions.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          modelVersions_ = other.modelVersions_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "model_versions" field.</summary>
        public const int ModelVersionsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Mlflow.ModelVersion> _repeated_modelVersions_codec
            = pb::FieldCodec.ForMessage(10, global::Mlflow.ModelVersion.Parser);
        private readonly pbc::RepeatedField<global::Mlflow.ModelVersion> modelVersions_ = new pbc::RepeatedField<global::Mlflow.ModelVersion>();
        /// <summary>
        /// Latest version models for each requests stage. Only return models with current ``READY`` status.
        /// If no ``stages`` provided, returns the latest version for each stage, including ``"None"``.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Mlflow.ModelVersion> ModelVersions {
          get { return modelVersions_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!modelVersions_.Equals(other.modelVersions_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= modelVersions_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          modelVersions_.WriteTo(output, _repeated_modelVersions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += modelVersions_.CalculateSize(_repeated_modelVersions_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          modelVersions_.Add(other.modelVersions_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                modelVersions_.AddEntriesFrom(input, _repeated_modelVersions_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class CreateModelVersion : pb::IMessage<CreateModelVersion> {
    private static readonly pb::MessageParser<CreateModelVersion> _parser = new pb::MessageParser<CreateModelVersion>(() => new CreateModelVersion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateModelVersion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateModelVersion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateModelVersion(CreateModelVersion other) : this() {
      name_ = other.name_;
      source_ = other.source_;
      runId_ = other.runId_;
      tags_ = other.tags_.Clone();
      runLink_ = other.runLink_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateModelVersion Clone() {
      return new CreateModelVersion(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Register model under this name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 2;
    private string source_ = "";
    /// <summary>
    /// URI indicating the location of the model artifacts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "run_id" field.</summary>
    public const int RunIdFieldNumber = 3;
    private string runId_ = "";
    /// <summary>
    /// MLflow run ID for correlation, if ``source`` was generated by an experiment run in
    /// MLflow tracking server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RunId {
      get { return runId_; }
      set {
        runId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Mlflow.ModelVersionTag> _repeated_tags_codec
        = pb::FieldCodec.ForMessage(34, global::Mlflow.ModelVersionTag.Parser);
    private readonly pbc::RepeatedField<global::Mlflow.ModelVersionTag> tags_ = new pbc::RepeatedField<global::Mlflow.ModelVersionTag>();
    /// <summary>
    /// Additional metadata for model version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mlflow.ModelVersionTag> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "run_link" field.</summary>
    public const int RunLinkFieldNumber = 5;
    private string runLink_ = "";
    /// <summary>
    /// MLflow run link - this is the exact link of the run that generated this model version,
    /// potentially hosted at another instance of MLflow.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RunLink {
      get { return runLink_; }
      set {
        runLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 6;
    private string description_ = "";
    /// <summary>
    /// Optional description for model version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateModelVersion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateModelVersion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Source != other.Source) return false;
      if (RunId != other.RunId) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (RunLink != other.RunLink) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      if (RunId.Length != 0) hash ^= RunId.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (RunLink.Length != 0) hash ^= RunLink.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Source.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Source);
      }
      if (RunId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RunId);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (RunLink.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RunLink);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (RunId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RunId);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (RunLink.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RunLink);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateModelVersion other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      if (other.RunId.Length != 0) {
        RunId = other.RunId;
      }
      tags_.Add(other.tags_);
      if (other.RunLink.Length != 0) {
        RunLink = other.RunLink;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Source = input.ReadString();
            break;
          }
          case 26: {
            RunId = input.ReadString();
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 42: {
            RunLink = input.ReadString();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CreateModelVersion message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.CreateModelVersion.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          modelVersion_ = other.modelVersion_ != null ? other.modelVersion_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "model_version" field.</summary>
        public const int ModelVersionFieldNumber = 1;
        private global::Mlflow.ModelVersion modelVersion_;
        /// <summary>
        /// Return new version number generated for this model in registry.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mlflow.ModelVersion ModelVersion {
          get { return modelVersion_; }
          set {
            modelVersion_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ModelVersion, other.ModelVersion)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (modelVersion_ != null) hash ^= ModelVersion.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (modelVersion_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ModelVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (modelVersion_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelVersion);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.modelVersion_ != null) {
            if (modelVersion_ == null) {
              modelVersion_ = new global::Mlflow.ModelVersion();
            }
            ModelVersion.MergeFrom(other.ModelVersion);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (modelVersion_ == null) {
                  modelVersion_ = new global::Mlflow.ModelVersion();
                }
                input.ReadMessage(modelVersion_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class UpdateModelVersion : pb::IMessage<UpdateModelVersion> {
    private static readonly pb::MessageParser<UpdateModelVersion> _parser = new pb::MessageParser<UpdateModelVersion>(() => new UpdateModelVersion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateModelVersion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateModelVersion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateModelVersion(UpdateModelVersion other) : this() {
      name_ = other.name_;
      version_ = other.version_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateModelVersion Clone() {
      return new UpdateModelVersion(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the registered model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    /// <summary>
    /// Model version number
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// If provided, updates the description for this ``registered_model``.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateModelVersion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateModelVersion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Version != other.Version) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateModelVersion other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UpdateModelVersion message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.UpdateModelVersion.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          modelVersion_ = other.modelVersion_ != null ? other.modelVersion_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "model_version" field.</summary>
        public const int ModelVersionFieldNumber = 1;
        private global::Mlflow.ModelVersion modelVersion_;
        /// <summary>
        /// Return new version number generated for this model in registry.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mlflow.ModelVersion ModelVersion {
          get { return modelVersion_; }
          set {
            modelVersion_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ModelVersion, other.ModelVersion)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (modelVersion_ != null) hash ^= ModelVersion.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (modelVersion_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ModelVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (modelVersion_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelVersion);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.modelVersion_ != null) {
            if (modelVersion_ == null) {
              modelVersion_ = new global::Mlflow.ModelVersion();
            }
            ModelVersion.MergeFrom(other.ModelVersion);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (modelVersion_ == null) {
                  modelVersion_ = new global::Mlflow.ModelVersion();
                }
                input.ReadMessage(modelVersion_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class TransitionModelVersionStage : pb::IMessage<TransitionModelVersionStage> {
    private static readonly pb::MessageParser<TransitionModelVersionStage> _parser = new pb::MessageParser<TransitionModelVersionStage>(() => new TransitionModelVersionStage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransitionModelVersionStage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransitionModelVersionStage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransitionModelVersionStage(TransitionModelVersionStage other) : this() {
      name_ = other.name_;
      version_ = other.version_;
      stage_ = other.stage_;
      archiveExistingVersions_ = other.archiveExistingVersions_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransitionModelVersionStage Clone() {
      return new TransitionModelVersionStage(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the registered model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    /// <summary>
    /// Model version number
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 3;
    private string stage_ = "";
    /// <summary>
    /// Transition `model_version` to new stage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Stage {
      get { return stage_; }
      set {
        stage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "archive_existing_versions" field.</summary>
    public const int ArchiveExistingVersionsFieldNumber = 4;
    private bool archiveExistingVersions_;
    /// <summary>
    /// When transitioning a model version to a particular stage, this flag dictates whether all
    /// existing model versions in that stage should be atomically moved to the "archived" stage.
    /// This ensures that at-most-one model version exists in the target stage.
    /// This field is *required* when transitioning a model versions's stage
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ArchiveExistingVersions {
      get { return archiveExistingVersions_; }
      set {
        archiveExistingVersions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransitionModelVersionStage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransitionModelVersionStage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Version != other.Version) return false;
      if (Stage != other.Stage) return false;
      if (ArchiveExistingVersions != other.ArchiveExistingVersions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Stage.Length != 0) hash ^= Stage.GetHashCode();
      if (ArchiveExistingVersions != false) hash ^= ArchiveExistingVersions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (Stage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Stage);
      }
      if (ArchiveExistingVersions != false) {
        output.WriteRawTag(32);
        output.WriteBool(ArchiveExistingVersions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Stage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Stage);
      }
      if (ArchiveExistingVersions != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransitionModelVersionStage other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Stage.Length != 0) {
        Stage = other.Stage;
      }
      if (other.ArchiveExistingVersions != false) {
        ArchiveExistingVersions = other.ArchiveExistingVersions;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            Stage = input.ReadString();
            break;
          }
          case 32: {
            ArchiveExistingVersions = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TransitionModelVersionStage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.TransitionModelVersionStage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          modelVersion_ = other.modelVersion_ != null ? other.modelVersion_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "model_version" field.</summary>
        public const int ModelVersionFieldNumber = 1;
        private global::Mlflow.ModelVersion modelVersion_;
        /// <summary>
        /// Updated model version
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mlflow.ModelVersion ModelVersion {
          get { return modelVersion_; }
          set {
            modelVersion_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ModelVersion, other.ModelVersion)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (modelVersion_ != null) hash ^= ModelVersion.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (modelVersion_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ModelVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (modelVersion_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelVersion);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.modelVersion_ != null) {
            if (modelVersion_ == null) {
              modelVersion_ = new global::Mlflow.ModelVersion();
            }
            ModelVersion.MergeFrom(other.ModelVersion);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (modelVersion_ == null) {
                  modelVersion_ = new global::Mlflow.ModelVersion();
                }
                input.ReadMessage(modelVersion_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class DeleteModelVersion : pb::IMessage<DeleteModelVersion> {
    private static readonly pb::MessageParser<DeleteModelVersion> _parser = new pb::MessageParser<DeleteModelVersion>(() => new DeleteModelVersion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteModelVersion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteModelVersion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteModelVersion(DeleteModelVersion other) : this() {
      name_ = other.name_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteModelVersion Clone() {
      return new DeleteModelVersion(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the registered model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    /// <summary>
    /// Model version number
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteModelVersion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteModelVersion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteModelVersion other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DeleteModelVersion message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.DeleteModelVersion.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetModelVersion : pb::IMessage<GetModelVersion> {
    private static readonly pb::MessageParser<GetModelVersion> _parser = new pb::MessageParser<GetModelVersion>(() => new GetModelVersion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetModelVersion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelVersion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelVersion(GetModelVersion other) : this() {
      name_ = other.name_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelVersion Clone() {
      return new GetModelVersion(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the registered model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    /// <summary>
    /// Model version number
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetModelVersion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetModelVersion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetModelVersion other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetModelVersion message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.GetModelVersion.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          modelVersion_ = other.modelVersion_ != null ? other.modelVersion_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "model_version" field.</summary>
        public const int ModelVersionFieldNumber = 1;
        private global::Mlflow.ModelVersion modelVersion_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mlflow.ModelVersion ModelVersion {
          get { return modelVersion_; }
          set {
            modelVersion_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ModelVersion, other.ModelVersion)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (modelVersion_ != null) hash ^= ModelVersion.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (modelVersion_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ModelVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (modelVersion_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelVersion);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.modelVersion_ != null) {
            if (modelVersion_ == null) {
              modelVersion_ = new global::Mlflow.ModelVersion();
            }
            ModelVersion.MergeFrom(other.ModelVersion);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (modelVersion_ == null) {
                  modelVersion_ = new global::Mlflow.ModelVersion();
                }
                input.ReadMessage(modelVersion_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class SearchModelVersions : pb::IMessage<SearchModelVersions> {
    private static readonly pb::MessageParser<SearchModelVersions> _parser = new pb::MessageParser<SearchModelVersions>(() => new SearchModelVersions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchModelVersions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchModelVersions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchModelVersions(SearchModelVersions other) : this() {
      filter_ = other.filter_;
      maxResults_ = other.maxResults_;
      orderBy_ = other.orderBy_.Clone();
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchModelVersions Clone() {
      return new SearchModelVersions(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private string filter_ = "";
    /// <summary>
    /// String filter condition, like "name='my-model-name'". Must be a single boolean condition,
    /// with string values wrapped in single quotes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_results" field.</summary>
    public const int MaxResultsFieldNumber = 2;
    private long maxResults_;
    /// <summary>
    /// Maximum number of models desired. Max threshold is 200K.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxResults {
      get { return maxResults_; }
      set {
        maxResults_ = value;
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_orderBy_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> orderBy_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of columns to be ordered by including model name, version, stage with an
    /// optional "DESC" or "ASC" annotation, where "ASC" is the default.
    /// Tiebreaks are done by latest stage transition timestamp, followed by name ASC, followed by
    /// version DESC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OrderBy {
      get { return orderBy_; }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 4;
    private string pageToken_ = "";
    /// <summary>
    /// Pagination token to go to next page based on previous search query.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchModelVersions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchModelVersions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      if (MaxResults != other.MaxResults) return false;
      if(!orderBy_.Equals(other.orderBy_)) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (MaxResults != 0L) hash ^= MaxResults.GetHashCode();
      hash ^= orderBy_.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filter);
      }
      if (MaxResults != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MaxResults);
      }
      orderBy_.WriteTo(output, _repeated_orderBy_codec);
      if (PageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (MaxResults != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxResults);
      }
      size += orderBy_.CalculateSize(_repeated_orderBy_codec);
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchModelVersions other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.MaxResults != 0L) {
        MaxResults = other.MaxResults;
      }
      orderBy_.Add(other.orderBy_);
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadString();
            break;
          }
          case 16: {
            MaxResults = input.ReadInt64();
            break;
          }
          case 26: {
            orderBy_.AddEntriesFrom(input, _repeated_orderBy_codec);
            break;
          }
          case 34: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SearchModelVersions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.SearchModelVersions.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          modelVersions_ = other.modelVersions_.Clone();
          nextPageToken_ = other.nextPageToken_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "model_versions" field.</summary>
        public const int ModelVersionsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Mlflow.ModelVersion> _repeated_modelVersions_codec
            = pb::FieldCodec.ForMessage(10, global::Mlflow.ModelVersion.Parser);
        private readonly pbc::RepeatedField<global::Mlflow.ModelVersion> modelVersions_ = new pbc::RepeatedField<global::Mlflow.ModelVersion>();
        /// <summary>
        /// Models that match the search criteria
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Mlflow.ModelVersion> ModelVersions {
          get { return modelVersions_; }
        }

        /// <summary>Field number for the "next_page_token" field.</summary>
        public const int NextPageTokenFieldNumber = 2;
        private string nextPageToken_ = "";
        /// <summary>
        /// Pagination token to request next page of models for the same search query.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string NextPageToken {
          get { return nextPageToken_; }
          set {
            nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!modelVersions_.Equals(other.modelVersions_)) return false;
          if (NextPageToken != other.NextPageToken) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= modelVersions_.GetHashCode();
          if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          modelVersions_.WriteTo(output, _repeated_modelVersions_codec);
          if (NextPageToken.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(NextPageToken);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += modelVersions_.CalculateSize(_repeated_modelVersions_codec);
          if (NextPageToken.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          modelVersions_.Add(other.modelVersions_);
          if (other.NextPageToken.Length != 0) {
            NextPageToken = other.NextPageToken;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                modelVersions_.AddEntriesFrom(input, _repeated_modelVersions_codec);
                break;
              }
              case 18: {
                NextPageToken = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetModelVersionDownloadUri : pb::IMessage<GetModelVersionDownloadUri> {
    private static readonly pb::MessageParser<GetModelVersionDownloadUri> _parser = new pb::MessageParser<GetModelVersionDownloadUri>(() => new GetModelVersionDownloadUri());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetModelVersionDownloadUri> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelVersionDownloadUri() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelVersionDownloadUri(GetModelVersionDownloadUri other) : this() {
      name_ = other.name_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelVersionDownloadUri Clone() {
      return new GetModelVersionDownloadUri(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the registered model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    /// <summary>
    /// Model version number
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetModelVersionDownloadUri);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetModelVersionDownloadUri other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetModelVersionDownloadUri other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetModelVersionDownloadUri message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.GetModelVersionDownloadUri.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          artifactUri_ = other.artifactUri_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "artifact_uri" field.</summary>
        public const int ArtifactUriFieldNumber = 1;
        private string artifactUri_ = "";
        /// <summary>
        /// URI corresponding to where artifacts for this model version are stored.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ArtifactUri {
          get { return artifactUri_; }
          set {
            artifactUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ArtifactUri != other.ArtifactUri) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ArtifactUri.Length != 0) hash ^= ArtifactUri.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ArtifactUri.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ArtifactUri);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ArtifactUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ArtifactUri);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.ArtifactUri.Length != 0) {
            ArtifactUri = other.ArtifactUri;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ArtifactUri = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Tag for a model version.
  /// </summary>
  public sealed partial class ModelVersionTag : pb::IMessage<ModelVersionTag> {
    private static readonly pb::MessageParser<ModelVersionTag> _parser = new pb::MessageParser<ModelVersionTag>(() => new ModelVersionTag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelVersionTag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelVersionTag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelVersionTag(ModelVersionTag other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelVersionTag Clone() {
      return new ModelVersionTag(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    /// <summary>
    /// The tag key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    /// <summary>
    /// The tag value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelVersionTag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelVersionTag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelVersionTag other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Tag for a registered model
  /// </summary>
  public sealed partial class RegisteredModelTag : pb::IMessage<RegisteredModelTag> {
    private static readonly pb::MessageParser<RegisteredModelTag> _parser = new pb::MessageParser<RegisteredModelTag>(() => new RegisteredModelTag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisteredModelTag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisteredModelTag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisteredModelTag(RegisteredModelTag other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisteredModelTag Clone() {
      return new RegisteredModelTag(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    /// <summary>
    /// The tag key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    /// <summary>
    /// The tag value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisteredModelTag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisteredModelTag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisteredModelTag other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetRegisteredModelTag : pb::IMessage<SetRegisteredModelTag> {
    private static readonly pb::MessageParser<SetRegisteredModelTag> _parser = new pb::MessageParser<SetRegisteredModelTag>(() => new SetRegisteredModelTag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetRegisteredModelTag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRegisteredModelTag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRegisteredModelTag(SetRegisteredModelTag other) : this() {
      name_ = other.name_;
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRegisteredModelTag Clone() {
      return new SetRegisteredModelTag(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Unique name of the model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private string key_ = "";
    /// <summary>
    /// Name of the tag. Maximum size depends on storage backend.
    /// If a tag with this name already exists, its preexisting value will be replaced by the specified `value`.
    /// All storage backends are guaranteed to support key values up to 250 bytes in size.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private string value_ = "";
    /// <summary>
    /// String value of the tag being logged. Maximum size depends on storage backend.
    /// All storage backends are guaranteed to support key values up to 5000 bytes in size.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetRegisteredModelTag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetRegisteredModelTag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetRegisteredModelTag other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
          case 26: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SetRegisteredModelTag message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.SetRegisteredModelTag.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class SetModelVersionTag : pb::IMessage<SetModelVersionTag> {
    private static readonly pb::MessageParser<SetModelVersionTag> _parser = new pb::MessageParser<SetModelVersionTag>(() => new SetModelVersionTag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetModelVersionTag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetModelVersionTag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetModelVersionTag(SetModelVersionTag other) : this() {
      name_ = other.name_;
      version_ = other.version_;
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetModelVersionTag Clone() {
      return new SetModelVersionTag(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Unique name of the model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    /// <summary>
    /// Model version number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 3;
    private string key_ = "";
    /// <summary>
    /// Name of the tag. Maximum size depends on storage backend.
    /// If a tag with this name already exists, its preexisting value will be replaced by the specified `value`.
    /// All storage backends are guaranteed to support key values up to 250 bytes in size.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 4;
    private string value_ = "";
    /// <summary>
    /// String value of the tag being logged. Maximum size depends on storage backend.
    /// All storage backends are guaranteed to support key values up to 5000 bytes in size.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetModelVersionTag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetModelVersionTag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Version != other.Version) return false;
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetModelVersionTag other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            Key = input.ReadString();
            break;
          }
          case 34: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SetModelVersionTag message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.SetModelVersionTag.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class DeleteRegisteredModelTag : pb::IMessage<DeleteRegisteredModelTag> {
    private static readonly pb::MessageParser<DeleteRegisteredModelTag> _parser = new pb::MessageParser<DeleteRegisteredModelTag>(() => new DeleteRegisteredModelTag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRegisteredModelTag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRegisteredModelTag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRegisteredModelTag(DeleteRegisteredModelTag other) : this() {
      name_ = other.name_;
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRegisteredModelTag Clone() {
      return new DeleteRegisteredModelTag(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the registered model that the tag was logged under.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private string key_ = "";
    /// <summary>
    /// Name of the tag. The name must be an exact match; wild-card deletion is not supported. Maximum size is 250 bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRegisteredModelTag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRegisteredModelTag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRegisteredModelTag other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DeleteRegisteredModelTag message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.DeleteRegisteredModelTag.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class DeleteModelVersionTag : pb::IMessage<DeleteModelVersionTag> {
    private static readonly pb::MessageParser<DeleteModelVersionTag> _parser = new pb::MessageParser<DeleteModelVersionTag>(() => new DeleteModelVersionTag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteModelVersionTag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.ModelRegistryReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteModelVersionTag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteModelVersionTag(DeleteModelVersionTag other) : this() {
      name_ = other.name_;
      version_ = other.version_;
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteModelVersionTag Clone() {
      return new DeleteModelVersionTag(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the registered model that the tag was logged under.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    /// <summary>
    /// Model version number that the tag was logged under.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 3;
    private string key_ = "";
    /// <summary>
    /// Name of the tag. The name must be an exact match; wild-card deletion is not supported. Maximum size is 250 bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteModelVersionTag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteModelVersionTag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Version != other.Version) return false;
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteModelVersionTag other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            Key = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DeleteModelVersionTag message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.DeleteModelVersionTag.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
