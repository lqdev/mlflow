// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: databricks_artifacts.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mlflow {

  /// <summary>Holder for reflection information generated from databricks_artifacts.proto</summary>
  public static partial class DatabricksArtifactsReflection {

    #region Descriptor
    /// <summary>File descriptor for databricks_artifacts.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DatabricksArtifactsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpkYXRhYnJpY2tzX2FydGlmYWN0cy5wcm90bxIGbWxmbG93GhVzY2FsYXBi",
            "L3NjYWxhcGIucHJvdG8aEGRhdGFicmlja3MucHJvdG8i3wEKFkFydGlmYWN0",
            "Q3JlZGVudGlhbEluZm8SDgoGcnVuX2lkGAEgASgJEgwKBHBhdGgYAiABKAkS",
            "EgoKc2lnbmVkX3VyaRgDIAEoCRI6CgdoZWFkZXJzGAQgAygLMikubWxmbG93",
            "LkFydGlmYWN0Q3JlZGVudGlhbEluZm8uSHR0cEhlYWRlchIsCgR0eXBlGAUg",
            "ASgOMh4ubWxmbG93LkFydGlmYWN0Q3JlZGVudGlhbFR5cGUaKQoKSHR0cEhl",
            "YWRlchIMCgRuYW1lGAEgASgJEg0KBXZhbHVlGAIgASgJIuMBChVHZXRDcmVk",
            "ZW50aWFsc0ZvclJlYWQSFAoGcnVuX2lkGAEgASgJQgT4hhkBEhIKBHBhdGgY",
            "AiABKAlCBPiGGQEaPwoIUmVzcG9uc2USMwoLY3JlZGVudGlhbHMYASABKAsy",
            "Hi5tbGZsb3cuQXJ0aWZhY3RDcmVkZW50aWFsSW5mbzpf4j8oCiZjb20uZGF0",
            "YWJyaWNrcy5ycGMuUlBDWyR0aGlzLlJlc3BvbnNlXeI/MQovY29tLmRhdGFi",
            "cmlja3MubWxmbG93LmFwaS5NbGZsb3dUcmFja2luZ01lc3NhZ2Ui5AEKFkdl",
            "dENyZWRlbnRpYWxzRm9yV3JpdGUSFAoGcnVuX2lkGAEgASgJQgT4hhkBEhIK",
            "BHBhdGgYAiABKAlCBPiGGQEaPwoIUmVzcG9uc2USMwoLY3JlZGVudGlhbHMY",
            "ASABKAsyHi5tbGZsb3cuQXJ0aWZhY3RDcmVkZW50aWFsSW5mbzpf4j8oCiZj",
            "b20uZGF0YWJyaWNrcy5ycGMuUlBDWyR0aGlzLlJlc3BvbnNlXeI/MQovY29t",
            "LmRhdGFicmlja3MubWxmbG93LmFwaS5NbGZsb3dUcmFja2luZ01lc3NhZ2Uq",
            "QgoWQXJ0aWZhY3RDcmVkZW50aWFsVHlwZRIRCg1BWlVSRV9TQVNfVVJJEAAS",
            "FQoRQVdTX1BSRVNJR05FRF9VUkwQATLeAgogRGF0YWJyaWNrc01sZmxvd0Fy",
            "dGlmYWN0c1NlcnZpY2USmQEKFWdldENyZWRlbnRpYWxzRm9yUmVhZBIdLm1s",
            "Zmxvdy5HZXRDcmVkZW50aWFsc0ZvclJlYWQaJi5tbGZsb3cuR2V0Q3JlZGVu",
            "dGlhbHNGb3JSZWFkLlJlc3BvbnNlIjnyhhk1CjEKA0dFVBImL21sZmxvdy9h",
            "cnRpZmFjdHMvY3JlZGVudGlhbHMtZm9yLXJlYWQaAggCEAISnQEKFmdldENy",
            "ZWRlbnRpYWxzRm9yV3JpdGUSHi5tbGZsb3cuR2V0Q3JlZGVudGlhbHNGb3JX",
            "cml0ZRonLm1sZmxvdy5HZXRDcmVkZW50aWFsc0ZvcldyaXRlLlJlc3BvbnNl",
            "Ijryhhk2CjIKA0dFVBInL21sZmxvdy9hcnRpZmFjdHMvY3JlZGVudGlhbHMt",
            "Zm9yLXdyaXRlGgIIAhACQiwKH2NvbS5kYXRhYnJpY2tzLmFwaS5wcm90by5t",
            "bGZsb3eQAQGgAQHiPwIQAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Scalapb.ScalapbReflection.Descriptor, global::Mlflow.DatabricksReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Mlflow.ArtifactCredentialType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.ArtifactCredentialInfo), global::Mlflow.ArtifactCredentialInfo.Parser, new[]{ "RunId", "Path", "SignedUri", "Headers", "Type" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.ArtifactCredentialInfo.Types.HttpHeader), global::Mlflow.ArtifactCredentialInfo.Types.HttpHeader.Parser, new[]{ "Name", "Value" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.GetCredentialsForRead), global::Mlflow.GetCredentialsForRead.Parser, new[]{ "RunId", "Path" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.GetCredentialsForRead.Types.Response), global::Mlflow.GetCredentialsForRead.Types.Response.Parser, new[]{ "Credentials" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.GetCredentialsForWrite), global::Mlflow.GetCredentialsForWrite.Parser, new[]{ "RunId", "Path" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Mlflow.GetCredentialsForWrite.Types.Response), global::Mlflow.GetCredentialsForWrite.Types.Response.Parser, new[]{ "Credentials" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// The type of a given artifact access credential
  /// </summary>
  public enum ArtifactCredentialType {
    /// <summary>
    /// The credential is an Azure Shared Access Signature URI. For more information, see
    /// https://docs.microsoft.com/en-us/azure/storage/common/storage-sas-overview
    /// </summary>
    [pbr::OriginalName("AZURE_SAS_URI")] AzureSasUri = 0,
    /// <summary>
    /// The credential is an AWS Presigned URL. For more information, see
    /// https://docs.aws.amazon.com/AmazonS3/latest/dev/ShareObjectPreSignedURL.html
    /// </summary>
    [pbr::OriginalName("AWS_PRESIGNED_URL")] AwsPresignedUrl = 1,
  }

  #endregion

  #region Messages
  public sealed partial class ArtifactCredentialInfo : pb::IMessage<ArtifactCredentialInfo> {
    private static readonly pb::MessageParser<ArtifactCredentialInfo> _parser = new pb::MessageParser<ArtifactCredentialInfo>(() => new ArtifactCredentialInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArtifactCredentialInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.DatabricksArtifactsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactCredentialInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactCredentialInfo(ArtifactCredentialInfo other) : this() {
      runId_ = other.runId_;
      path_ = other.path_;
      signedUri_ = other.signedUri_;
      headers_ = other.headers_.Clone();
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArtifactCredentialInfo Clone() {
      return new ArtifactCredentialInfo(this);
    }

    /// <summary>Field number for the "run_id" field.</summary>
    public const int RunIdFieldNumber = 1;
    private string runId_ = "";
    /// <summary>
    /// The ID of the MLflow Run containing the artifact that can be accessed
    /// with the credential
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RunId {
      get { return runId_; }
      set {
        runId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private string path_ = "";
    /// <summary>
    /// The path, relative to the Run's artifact root location, of the artifact
    /// that can be accessed with the credential
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signed_uri" field.</summary>
    public const int SignedUriFieldNumber = 3;
    private string signedUri_ = "";
    /// <summary>
    /// The signed URI credential that provides access to the artifact
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SignedUri {
      get { return signedUri_; }
      set {
        signedUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Mlflow.ArtifactCredentialInfo.Types.HttpHeader> _repeated_headers_codec
        = pb::FieldCodec.ForMessage(34, global::Mlflow.ArtifactCredentialInfo.Types.HttpHeader.Parser);
    private readonly pbc::RepeatedField<global::Mlflow.ArtifactCredentialInfo.Types.HttpHeader> headers_ = new pbc::RepeatedField<global::Mlflow.ArtifactCredentialInfo.Types.HttpHeader>();
    /// <summary>
    /// A collection of HTTP headers that should be specified when uploading to
    /// or downloading from the specified `signed_uri`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mlflow.ArtifactCredentialInfo.Types.HttpHeader> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::Mlflow.ArtifactCredentialType type_ = 0;
    /// <summary>
    /// The type of the signed credential URI (e.g., an AWS presigned URL
    /// or an Azure Shared Access Signature URI)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mlflow.ArtifactCredentialType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArtifactCredentialInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArtifactCredentialInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RunId != other.RunId) return false;
      if (Path != other.Path) return false;
      if (SignedUri != other.SignedUri) return false;
      if(!headers_.Equals(other.headers_)) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RunId.Length != 0) hash ^= RunId.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (SignedUri.Length != 0) hash ^= SignedUri.GetHashCode();
      hash ^= headers_.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RunId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RunId);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (SignedUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SignedUri);
      }
      headers_.WriteTo(output, _repeated_headers_codec);
      if (Type != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RunId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RunId);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (SignedUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SignedUri);
      }
      size += headers_.CalculateSize(_repeated_headers_codec);
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArtifactCredentialInfo other) {
      if (other == null) {
        return;
      }
      if (other.RunId.Length != 0) {
        RunId = other.RunId;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.SignedUri.Length != 0) {
        SignedUri = other.SignedUri;
      }
      headers_.Add(other.headers_);
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RunId = input.ReadString();
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
          case 26: {
            SignedUri = input.ReadString();
            break;
          }
          case 34: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
          case 40: {
            type_ = (global::Mlflow.ArtifactCredentialType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ArtifactCredentialInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class HttpHeader : pb::IMessage<HttpHeader> {
        private static readonly pb::MessageParser<HttpHeader> _parser = new pb::MessageParser<HttpHeader>(() => new HttpHeader());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<HttpHeader> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.ArtifactCredentialInfo.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HttpHeader() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HttpHeader(HttpHeader other) : this() {
          name_ = other.name_;
          value_ = other.value_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public HttpHeader Clone() {
          return new HttpHeader(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        /// <summary>
        /// The HTTP header name
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private string value_ = "";
        /// <summary>
        /// The HTTP header value
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Value {
          get { return value_; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as HttpHeader);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(HttpHeader other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Value != other.Value) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Value.Length != 0) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Value.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Value.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(HttpHeader other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Value.Length != 0) {
            Value = other.Value;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Value = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetCredentialsForRead : pb::IMessage<GetCredentialsForRead> {
    private static readonly pb::MessageParser<GetCredentialsForRead> _parser = new pb::MessageParser<GetCredentialsForRead>(() => new GetCredentialsForRead());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCredentialsForRead> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.DatabricksArtifactsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCredentialsForRead() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCredentialsForRead(GetCredentialsForRead other) : this() {
      runId_ = other.runId_;
      path_ = other.path_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCredentialsForRead Clone() {
      return new GetCredentialsForRead(this);
    }

    /// <summary>Field number for the "run_id" field.</summary>
    public const int RunIdFieldNumber = 1;
    private string runId_ = "";
    /// <summary>
    /// The ID of the MLflow Run for which to fetch artifact read credentials
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RunId {
      get { return runId_; }
      set {
        runId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private string path_ = "";
    /// <summary>
    /// The artifact path, relative to the Run's artifact root location, for which to
    /// fetch artifact read credentials
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCredentialsForRead);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCredentialsForRead other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RunId != other.RunId) return false;
      if (Path != other.Path) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RunId.Length != 0) hash ^= RunId.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RunId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RunId);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RunId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RunId);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCredentialsForRead other) {
      if (other == null) {
        return;
      }
      if (other.RunId.Length != 0) {
        RunId = other.RunId;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RunId = input.ReadString();
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetCredentialsForRead message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.GetCredentialsForRead.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          credentials_ = other.credentials_ != null ? other.credentials_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "credentials" field.</summary>
        public const int CredentialsFieldNumber = 1;
        private global::Mlflow.ArtifactCredentialInfo credentials_;
        /// <summary>
        /// Credentials for reading from the specified artifact location
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mlflow.ArtifactCredentialInfo Credentials {
          get { return credentials_; }
          set {
            credentials_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Credentials, other.Credentials)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (credentials_ != null) hash ^= Credentials.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (credentials_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Credentials);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (credentials_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Credentials);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.credentials_ != null) {
            if (credentials_ == null) {
              credentials_ = new global::Mlflow.ArtifactCredentialInfo();
            }
            Credentials.MergeFrom(other.Credentials);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (credentials_ == null) {
                  credentials_ = new global::Mlflow.ArtifactCredentialInfo();
                }
                input.ReadMessage(credentials_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetCredentialsForWrite : pb::IMessage<GetCredentialsForWrite> {
    private static readonly pb::MessageParser<GetCredentialsForWrite> _parser = new pb::MessageParser<GetCredentialsForWrite>(() => new GetCredentialsForWrite());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCredentialsForWrite> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mlflow.DatabricksArtifactsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCredentialsForWrite() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCredentialsForWrite(GetCredentialsForWrite other) : this() {
      runId_ = other.runId_;
      path_ = other.path_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCredentialsForWrite Clone() {
      return new GetCredentialsForWrite(this);
    }

    /// <summary>Field number for the "run_id" field.</summary>
    public const int RunIdFieldNumber = 1;
    private string runId_ = "";
    /// <summary>
    /// The ID of the MLflow Run for which to fetch artifact write credentials
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RunId {
      get { return runId_; }
      set {
        runId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private string path_ = "";
    /// <summary>
    /// The artifact path, relative to the Run's artifact root location, for which to
    /// fetch artifact write credentials
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCredentialsForWrite);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCredentialsForWrite other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RunId != other.RunId) return false;
      if (Path != other.Path) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RunId.Length != 0) hash ^= RunId.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RunId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RunId);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RunId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RunId);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCredentialsForWrite other) {
      if (other == null) {
        return;
      }
      if (other.RunId.Length != 0) {
        RunId = other.RunId;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RunId = input.ReadString();
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetCredentialsForWrite message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Response : pb::IMessage<Response> {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Mlflow.GetCredentialsForWrite.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this() {
          credentials_ = other.credentials_ != null ? other.credentials_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone() {
          return new Response(this);
        }

        /// <summary>Field number for the "credentials" field.</summary>
        public const int CredentialsFieldNumber = 1;
        private global::Mlflow.ArtifactCredentialInfo credentials_;
        /// <summary>
        /// Credentials for writing to the specified artifacts location
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Mlflow.ArtifactCredentialInfo Credentials {
          get { return credentials_; }
          set {
            credentials_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Credentials, other.Credentials)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (credentials_ != null) hash ^= Credentials.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (credentials_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Credentials);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (credentials_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Credentials);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other) {
          if (other == null) {
            return;
          }
          if (other.credentials_ != null) {
            if (credentials_ == null) {
              credentials_ = new global::Mlflow.ArtifactCredentialInfo();
            }
            Credentials.MergeFrom(other.Credentials);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (credentials_ == null) {
                  credentials_ = new global::Mlflow.ArtifactCredentialInfo();
                }
                input.ReadMessage(credentials_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
